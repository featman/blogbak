{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"themes/yilia/source/js/pc.js","path":"js/pc.js","modified":1},{"_id":"themes/yilia/source/js/mobile.js","path":"js/mobile.js","modified":1},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":1},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":1},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":1},{"_id":"themes/yilia/source/img/zhihu.png","path":"img/zhihu.png","modified":1},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":1},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":1},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":1},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":1},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":1},{"_id":"themes/yilia/source/img/mail.png","path":"img/mail.png","modified":1},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":1},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":1},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":1},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":1},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":1},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":1},{"_id":"themes/yilia/source/img/douban.png","path":"img/douban.png","modified":1},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":1},{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1},{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1},{"_id":"source/imge/1.png","path":"imge/1.png","modified":1}],"Cache":[{"_id":"source/404.html","shasum":"1473ee1a881fa8392725c7ac06362335aa78c14b","modified":1439030925000},{"_id":"source/_posts/Liangxindns.md","shasum":"e5ee352ec8b9f202613b686691e123277b86f674","modified":1439103201000},{"_id":"source/_posts/busybox.md","shasum":"d5c1b3bed05337484c64c4ed2614f9f2df163741","modified":1439101738000},{"_id":"source/_posts/hadoop.md","shasum":"d2b04d758ef30dfadf5dd6b509ca3c7811cadd53","modified":1439100965000},{"_id":"source/_posts/linuxneicunguanli.md","shasum":"8a50f07743441dce949464614bb92d62edecc6de","modified":1439100264000},{"_id":"source/_posts/phpmyadmin.md","shasum":"792910425d357ef2334f52dd55b99d1f7075fb3c","modified":1439099503000},{"_id":"source/_posts/sshreverse.md","shasum":"1bc672422a818b87d7339338358544f88a9d1245","modified":1439103092000},{"_id":"source/_posts/新建文本文档.txt","shasum":"e287eb0e0fc8966454c4b7b5e99784bb55ac9f5f","modified":1439082816000},{"_id":"source/imge/1.png","shasum":"60e066bac07555c56dd4963abd81f59c2daa5785","modified":1439036988000},{"_id":"source/search/index.md","shasum":"33ba535f337a8bbb12473103dcb0aa5505b36fac","modified":1438998791000},{"_id":"source/tags/index.md","shasum":"a50cb55ee576e17268c9216edf600ecdd757626a","modified":1438956486000},{"_id":"themes/yilia/README.md","shasum":"8648a81b3ae08a4accd6b0541533e662511e6400","modified":1439087771000},{"_id":"themes/yilia/_config.yml","shasum":"4a62bb19945f60e8f107b265cc17563565b16c9e","modified":1439091996000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","shasum":"082504c9fd8600306d4ca55f03e3cbb0ddd99dd7","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","shasum":"8dfb6d68aa8a0661d26c32ce1ce1f45815364c3a","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/archive.ejs","shasum":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/article.ejs","shasum":"ef8dd558f908f293c34123c0b7ff879d2fd0c09f","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/footer.ejs","shasum":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","shasum":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/head.ejs","shasum":"963c106412a3ab142871976978ecc9884aeca17a","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/header.ejs","shasum":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","shasum":"70a9951e4e2d30aabba88e75c3fa54b9235ce6a6","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","shasum":"54fab4d3d64cb937d6baec7324ffabf9f202b883","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","shasum":"cd0af87ee781ac9c2b0e6a2a05b063d4bd497d9c","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","shasum":"d4f0e36f9a2167e91082dbd7d52425a06d2bebbf","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","shasum":"c0c988334e857a77ba455a056dfa21809e7e76a5","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","shasum":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","shasum":"d19dee2082528e1844bed3aa4e4bd59f15fd7a7a","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","shasum":"da39b4ba0c0ce4e1932fd45c5aee10e8aca41f28","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","shasum":"78612cfc091d7d861a70455a0dc8c3036e460879","modified":1439087771000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","shasum":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1439087771000},{"_id":"themes/yilia/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1439087771000},{"_id":"themes/yilia/layout/category.ejs","shasum":"765426a9c8236828dc34759e604cc2c52292835a","modified":1439087771000},{"_id":"themes/yilia/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1439087771000},{"_id":"themes/yilia/layout/layout.ejs","shasum":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1439087771000},{"_id":"themes/yilia/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1439087771000},{"_id":"themes/yilia/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1439087771000},{"_id":"themes/yilia/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1439087771000},{"_id":"themes/yilia/package.json","shasum":"00357ef6f24eb049074da81809e98f973f528cca","modified":1439087771000},{"_id":"themes/yilia/source/css/_extend.styl","shasum":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/archive.styl","shasum":"8b349f1605024dcdae054e04f02d71a2e84957c2","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/article.styl","shasum":"872fc4e63509fef885c939e5fd70e6ed439beced","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/footer.styl","shasum":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/header.styl","shasum":"67e59feb18eee6026717cb440d86ab9551782628","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/highlight.styl","shasum":"8cadf8437ce6f372802d3d28617a1ab97e7c818e","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/instagram.styl","shasum":"8a7b07bf5ea2d3588c0019f722c245bb1a8696af","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/main.styl","shasum":"4268f759920106a576c6037264076b36018ff73b","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/mobile-slider.styl","shasum":"e19c7fae6968ad3ea6cfc110900a991f9b5fce31","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/mobile.styl","shasum":"3a03b04ef8ac305aa5dbf7b9db99cd9377d07383","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/page.styl","shasum":"720b5b169bc28ccba3794efce9b7cd39f243dec7","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/scroll.styl","shasum":"5539a38f9acd603d453a0ea0d8ce10893cf83d22","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/share.styl","shasum":"22697b9a9877ab9f018364feb57aeea4a8313c9a","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","shasum":"af0115de5c6455f899a2e09225b50224982c039d","modified":1439087771000},{"_id":"themes/yilia/source/css/_partial/wheelmenu.styl","shasum":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1439087771000},{"_id":"themes/yilia/source/css/_util/grid.styl","shasum":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1439087771000},{"_id":"themes/yilia/source/css/_util/mixin.styl","shasum":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1439087771000},{"_id":"themes/yilia/source/css/_variables.styl","shasum":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1439087771000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","shasum":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1439087771000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","shasum":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1439087771000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","shasum":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1439087771000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","shasum":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1439087771000},{"_id":"themes/yilia/source/css/style.styl","shasum":"456e8cfe3b0b0371e81848ea9b0bc7ffd5360921","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","shasum":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","shasum":"a82597493d75ea989ca586e09173cff332efe41e","modified":1439087771000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1439087771000},{"_id":"themes/yilia/source/img/coderwall.png","shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1439087771000},{"_id":"themes/yilia/source/img/delicious.png","shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1439087771000},{"_id":"themes/yilia/source/img/douban.png","shasum":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1439087771000},{"_id":"themes/yilia/source/img/facebook.png","shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1439087771000},{"_id":"themes/yilia/source/img/github.png","shasum":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1439087771000},{"_id":"themes/yilia/source/img/google.png","shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1439087771000},{"_id":"themes/yilia/source/img/img-err.png","shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1439087771000},{"_id":"themes/yilia/source/img/img-loading.png","shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1439087771000},{"_id":"themes/yilia/source/img/linkedin.png","shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1439087771000},{"_id":"themes/yilia/source/img/mail.png","shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1439087771000},{"_id":"themes/yilia/source/img/pinboard.png","shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1439087771000},{"_id":"themes/yilia/source/img/pinterest.png","shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1439087771000},{"_id":"themes/yilia/source/img/rss.png","shasum":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1439087771000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1439087771000},{"_id":"themes/yilia/source/img/stackoverflow.png","shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1439087771000},{"_id":"themes/yilia/source/img/twitter.png","shasum":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1439087771000},{"_id":"themes/yilia/source/img/weibo.png","shasum":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1439087771000},{"_id":"themes/yilia/source/img/zhihu.png","shasum":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1439087771000},{"_id":"themes/yilia/source/js/instagram.js","shasum":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1439087771000},{"_id":"themes/yilia/source/js/jquery.lazyload.js","shasum":"c11a2e7b330d16d06feabd0a8477099adf9d6799","modified":1439087771000},{"_id":"themes/yilia/source/js/main.js","shasum":"e2633f282e377a4169649c9f17dc96036ad4fc64","modified":1439087771000},{"_id":"themes/yilia/source/js/mobile.js","shasum":"b68cc01d24e80973c48205f551da87f3f3427644","modified":1439087771000},{"_id":"themes/yilia/source/js/pc.js","shasum":"a5397d34a04084ee089b4b1e26457ab46ecea63e","modified":1439087771000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","shasum":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1439087771000},{"_id":"public/js/pc.js","modified":1439103231061,"shasum":"fdbc039fc9ffa70815b5fc4daaa587ae29693f10"},{"_id":"public/js/mobile.js","modified":1439103231072,"shasum":"b68cc01d24e80973c48205f551da87f3f3427644"},{"_id":"public/js/main.js","modified":1439103231077,"shasum":"0640b68a76fab3c693b3cd1e4d04d14be1e53940"},{"_id":"public/js/jquery.lazyload.js","modified":1439103231080,"shasum":"c11a2e7b330d16d06feabd0a8477099adf9d6799"},{"_id":"public/js/instagram.js","modified":1439103231085,"shasum":"f19adbcc0dac33536bc6660598059048ec901882"},{"_id":"public/img/zhihu.png","modified":1439103231096,"shasum":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d"},{"_id":"public/img/weibo.png","modified":1439103231101,"shasum":"280dae3fd38086158b4a1b57edb94c06b1a5014b"},{"_id":"public/img/twitter.png","modified":1439103231105,"shasum":"14dbb8e62d056525253bc0de13acd1723da7a934"},{"_id":"public/img/stackoverflow.png","modified":1439103231109,"shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2"},{"_id":"public/img/scrollbar_arrow.png","modified":1439103231113,"shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0"},{"_id":"public/img/rss.png","modified":1439103231121,"shasum":"430fd47340e75214c081abd05cd7410cf7c71b86"},{"_id":"public/img/pinterest.png","modified":1439103231125,"shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630"},{"_id":"public/img/pinboard.png","modified":1439103231133,"shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0"},{"_id":"public/img/mail.png","modified":1439103231137,"shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7"},{"_id":"public/img/linkedin.png","modified":1439103231141,"shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c"},{"_id":"public/img/img-loading.png","modified":1439103231165,"shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031"},{"_id":"public/img/img-err.png","modified":1439103231170,"shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b"},{"_id":"public/img/google.png","modified":1439103231177,"shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d"},{"_id":"public/img/github.png","modified":1439103231183,"shasum":"b84d03b32fa388dcbf149296ebd16dce6223d48d"},{"_id":"public/img/facebook.png","modified":1439103231185,"shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54"},{"_id":"public/img/douban.png","modified":1439103231192,"shasum":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e"},{"_id":"public/img/delicious.png","modified":1439103231196,"shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd"},{"_id":"public/img/coderwall.png","modified":1439103231201,"shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1439103231205,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1439103231210,"shasum":"a82597493d75ea989ca586e09173cff332efe41e"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1439103231216,"shasum":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1439103231236,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1439103231240,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1439103231244,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1439103231248,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1439103231256,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1439103231264,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1439103231269,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1439103231275,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1439103231280,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1439103231286,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1439103231292,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1439103231295,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1439103233440,"shasum":"e56554c624d9d49e9429eeeb9222488f8df634ec"},{"_id":"public/css/fonts/fontawesome-webfont.woff","modified":1439103234336,"shasum":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832"},{"_id":"public/css/fonts/fontawesome-webfont.ttf","modified":1439103234341,"shasum":"1480b8101b02da9bc4c60341b5e185e63e585064"},{"_id":"public/css/fonts/fontawesome-webfont.svgz","modified":1439103234348,"shasum":"4bfdd33ed702e32ae01399fcc2652377f78e7626"},{"_id":"public/css/fonts/fontawesome-webfont.svg","modified":1439103234355,"shasum":"ba13657479b46daecb6336bfe376f84cef3ae58b"},{"_id":"public/css/fonts/fontawesome-webfont.eot","modified":1439103234360,"shasum":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6"},{"_id":"public/imge/1.png","modified":1439103234365,"shasum":"60e066bac07555c56dd4963abd81f59c2daa5785"},{"_id":"public/404.html","modified":1439103234369,"shasum":"5c6699154a8233bf776bcb4fbd3ba078beddccc7"},{"_id":"public/tags/index.html","modified":1439103234486,"shasum":"3781b0aac4c156679f0e6b23dc8d22a8ed61752f"},{"_id":"public/search/index.html","modified":1439103234508,"shasum":"63c29ec50410f1effd54e146f80f8680f6621234"},{"_id":"public/2015/08/01/linuxneicunguanli/index.html","modified":1439103234543,"shasum":"125ec60c10b23be93938e728daac839ec6a3e7c1"},{"_id":"public/2015/07/25/phpmyadmin/index.html","modified":1439103234576,"shasum":"7d94ce7e2b5a7e7a0cc46f4125a89a00ac1165b7"},{"_id":"public/2015/07/15/Liangxindns/index.html","modified":1439103234599,"shasum":"369316d651f1fa5a1bd107de293ce6ba024fb814"},{"_id":"public/2015/04/11/busybox/index.html","modified":1439103234657,"shasum":"e65f24a71e35ff75f5b2587a38561bb50e1d7253"},{"_id":"public/2015/01/11/hadoop/index.html","modified":1439103234716,"shasum":"358a78892f277802c5dcc39cba2c2bed8a3fc16e"},{"_id":"public/2014/10/16/sshreverse/index.html","modified":1439103234757,"shasum":"6d40309bdb08862d7ea5c53ff399a972473b44bf"},{"_id":"public/archives/index.html","modified":1439103234812,"shasum":"c8e2786a0c2771dffdb1ca242cc5e0d874bbf359"},{"_id":"public/archives/2014/index.html","modified":1439103234823,"shasum":"fe99be07de5bc92634c74809720c488e9d7b4ba2"},{"_id":"public/archives/2014/10/index.html","modified":1439103234852,"shasum":"3594198b4cac39325faf3371abab8d0aa5a6a3da"},{"_id":"public/archives/2015/index.html","modified":1439103234882,"shasum":"6b3eb500b3bbf70f8918324fecf9cd3a53e18d65"},{"_id":"public/archives/2015/01/index.html","modified":1439103234895,"shasum":"23f82f6c84275b341b4faf098e4923c210c72b4d"},{"_id":"public/archives/2015/04/index.html","modified":1439103234909,"shasum":"6770875c920a832c9ab186d1f3f0432b4ca414d7"},{"_id":"public/archives/2015/07/index.html","modified":1439103234933,"shasum":"944d534438ef9c49087aa501e148dc1f200f2e85"},{"_id":"public/archives/2015/08/index.html","modified":1439103234949,"shasum":"2636bc3fa0b9b685ac3e2567e872913c984c6b8c"},{"_id":"public/sitemap.xml","modified":1439103234950,"shasum":"ad5db6baa96641ab7e72798149167ceee7c7c42a"},{"_id":"public/categories/网络技术/index.html","modified":1439103234971,"shasum":"75ce40de3890b4f42cd7b5841858c1bf4a1092a8"},{"_id":"public/categories/数据库技术/index.html","modified":1439103235003,"shasum":"f3b624a3fda7ea39a2f7c890d78a1fde6a0d6ed0"},{"_id":"public/categories/转载文章/index.html","modified":1439103235024,"shasum":"0ee2fd527ad53578dc0f6a4e7a29f37fc82e5d71"},{"_id":"public/categories/hadoop/index.html","modified":1439103235040,"shasum":"5a72ff2bb2fe236f6565c61c75924a951babd0f1"},{"_id":"public/categories/嵌入式linux/index.html","modified":1439103235055,"shasum":"60af3b2b7547ab446e1a5ad0fa03fd01b132d62a"},{"_id":"public/index.html","modified":1439103235099,"shasum":"5c4899608856c13c9625cd0e7cf34bec41fdd35c"},{"_id":"public/tags/ssh反向代理/index.html","modified":1439103235116,"shasum":"90c7a51a470965274aca37365c996bc1bf06eed1"},{"_id":"public/tags/ssh/index.html","modified":1439103235138,"shasum":"29af7466aaa7cccff7bf885b471e9a6000c4c27b"},{"_id":"public/tags/穿越内网/index.html","modified":1439103235153,"shasum":"9fa723a9d75bbd14b38dd227ff2bbd826feeecc1"},{"_id":"public/tags/excel/index.html","modified":1439103235165,"shasum":"5c567fb0b206c03f548e5dae055a68ae2261ed90"},{"_id":"public/tags/phpmyadmin/index.html","modified":1439103235177,"shasum":"cf6f6ce457f414b32bd2cc4857fe01ecbd81b5bf"},{"_id":"public/tags/linux/index.html","modified":1439103235200,"shasum":"c8e5a9d732d1481209a5e524258a73a9e05158e3"},{"_id":"public/tags/内存管理/index.html","modified":1439103235213,"shasum":"85a09519f662b9e419f5d0ebddb031feaf820153"},{"_id":"public/tags/分页技术/index.html","modified":1439103235224,"shasum":"1c8f396c860e67987bb143a2565fbebb060ed584"},{"_id":"public/tags/hadoop/index.html","modified":1439103235239,"shasum":"eeffb5b48156b691683746d712e1978c9bf0beb6"},{"_id":"public/tags/n2n/index.html","modified":1439103235264,"shasum":"98ee044a96b7909fdb09428a0499a2cfd0ccf798"},{"_id":"public/tags/vpn/index.html","modified":1439103235279,"shasum":"2b1fe163ed7794709fbca55eadb1e367c13ba284"},{"_id":"public/tags/文件系统/index.html","modified":1439103235297,"shasum":"34eaef96157ba9a372d55cb50cc56596e2d0a6b2"},{"_id":"public/tags/busybox/index.html","modified":1439103235312,"shasum":"27148daba25013cbb91b470d76f7855a6a1ec0f6"},{"_id":"public/tags/移植/index.html","modified":1439103235322,"shasum":"3d5d918db9a293535a493e2c1efeda240ce096d8"},{"_id":"public/tags/DNS，第三方DNS/index.html","modified":1439103235340,"shasum":"1bb0f1356fedc28bee237c59f2e92a00f412be13"}],"Category":[{"name":"网络技术","_id":"cid44wjx30004rud3htxrmmd4"},{"name":"数据库技术","_id":"cid44wjxl000drud3q66m6h4i"},{"name":"转载文章","_id":"cid44wjxv000krud3futlyshz"},{"name":"hadoop","_id":"cid44wjyb000trud3bdhp1v0y"},{"name":"嵌入式linux","_id":"cid44wjyy0012rud3wu6uhwhi"}],"Data":[],"Page":[{"layout":"false","_content":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <title>404</title>\n    <link rel=\"icon\" href=\"/favicon.ico\">\n  </head>\n  <body>\n    <div align=\"center\">\n      <p><script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script></p>\n    </div>\n  </body>\n</html>\n\n\n","source":"404.html","raw":"layout: false\n--------\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <title>404</title>\n    <link rel=\"icon\" href=\"/favicon.ico\">\n  </head>\n  <body>\n    <div align=\"center\">\n      <p><script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script></p>\n    </div>\n  </body>\n</html>\n\n\n","date":"2015-08-08T10:48:49.000Z","updated":"2015-08-08T10:48:45.000Z","path":"404.html","title":"","comments":1,"_id":"cid44wjpy0000rud314k5vl22"},{"_content":"layout: tags\ntitle: tags\n","source":"tags/index.md","raw":"layout: tags\ntitle: tags\n","date":"2015-08-07T14:08:06.000Z","updated":"2015-08-07T14:08:06.000Z","path":"tags/index.html","title":"","comments":1,"layout":"page","_id":"cid44wjwd0001rud3sks5wt90"},{"layout":"search","title":"search","_content":"","source":"search/index.md","raw":"layout: search\ntitle: search\n---\n","date":"2015-08-08T01:53:11.000Z","updated":"2015-08-08T01:53:11.000Z","path":"search/index.html","comments":1,"_id":"cid44wjwk0002rud3tum9dgr8"}],"Post":[{"title":"ssh 反向代理","date":"2014-10-16T18:01:01.000Z","_content":"\n为了解决无法突破对远端设备所在内网访问的限制，ssh提供了一套反向代理机制来解决问题。\n\n<!--more-->\n## 1.原理图\n\n![image description](http://img-storage.qiniudn.com/15-8-9/87726795.jpg)\n\n## 2.使用方法\n##### 2.1 在A下\n\n```\nssh -NfR 2222:localhost:22 httpd@100.100.100.100 -p 22\n```\n（连接对方22的端口，并把B主机的2222端口 与 本地A主机的22端口映射，即建立通信线路。用httpd这个用户名登陆B主机，B主机ip为100.100.100.100）\n##### 2.2 在B下\n\n```\nssh -p 2222 exe@localhost\n```\n\n（B主机通过ssh客户端连接自己本地的2222端口，并用exe登陆远程A主机）\n\n（也可以不用输入exe@，直接输入ssh -p 2222 localhost即可）\n\n**这里需要说明的是，为了使B区分不同的远程主机，即可用端口号加以区分。**\n\n##### 2.3 为了解决内网A主机 第一次主动连接B主机时，需要输入密码的问题，还有ssh生命周期时间太短的问题。我们可以采用ssh-keygen和autossh解决。\n\na.在A主机上键入：\n```\nssh-keygen\n```\n ，依次点下去，会在~目录下的.ssh/中生成一个ida_rsa.pub的文件，把这个文件通过scp拷贝到远程主机B上\n\nb.在B主机上键入：\n```\ncat ida_rsa.pub >> ~/.ssh/authorized_keys\n```\n\n\n此时，A主机已经免输密码。\n\nc.接着我们在A主机下安装一个autossh （ubuntu可采用apt-get install autossh安装，嵌入式设备可能需要移植）\n\n~~d.在A主机上键入 \n```\nautossh -M 5678 -NR 2222:localhost:22 root@100.100.100.100 -p 22  & \n```\n\n此时，A主机与B主机的SSH通道一直会保持在线了。~~\n\n\n##### 2.4 经测试发现，这条命令并不适用于3G网卡传输的方式，因为3G的无线传输方式本身就有传输可能会断掉的缺点。如果A主机端为一个3G网络的环境，那么需要在A主机上使用以下方法解决。\nd1.    \n```\nautossh -M 0 -q -N -o ServerAliveInterval=10 -o ServerAliveCountMax=3 -R 44444:localhost:22 root@100.100.100.100\n```\n这条命令的作用比上一条多了一个心跳信息，就是说A主机的ssh每隔10秒会主动给B主机的sshd发送心跳信息，这时候B主机sshd会给予A主机ssh一个响应信息，这是一个过程，如果B主机没有给予ssh一个响应信息，那么ServerAliveCountMax值+1，当ServerAliveCountMax等于3时，ssh客户端认为已经断掉，这时候ssh会自己关闭相关端口和进程，然后由autossh自动启动ssh客户端，再一次连接，也就是说完成一次检测网络状态，需要30秒，如果30秒，由于网络阻塞或者其他问题，那么ssh会主动关闭。\n\nd2.   另外，由于是3G网络环境（测试发现，如果3G网络异常断开，那么autossh进程会死掉），所以需要加入一小段监控的shell脚本，定期检测autossh是否存在，如果不存在则重启，如果存在阻塞几秒继续监控。\n\nd3.   上边配置了A主机，还需要配置B主机（服务器），首先要说的是，当用d1的那条命令后，会使得服务器端ssh连接异常，也就是说putty可能登陆不上去，重启也无效（这个可能是特例，总之咱不知道具体原因），查了一些资料，说是要更改ssh客户端的配置即可（这里不明白），具体做法是/etc/ssh/ssh_config这个文件中，加入ServerAliveInterval 60即可，据说是防被踢，但是不理解。。。。。\n\nd4. 另外我们使用netstat -antp命令可以看到linux当前网络的端口占用情况。测试的时候我发现A主机的3G网络异常断开之后，A主机的autossh自然死掉了。但是在B主机netstat -antp时，还是可以看到系统在监听44444端口，后边的进程是sshd 服务端程序启动的，如果我们在B主机上不做任何设置，那么会导致B主机44444端口一直处于无效状态，即便A主机设置重新启动autossh，也无法再B主机通过44444与A主机建立连接。解决方法是打开/etc/ssh/sshd_config配置文件，在最后边添加或者更改ClientAliveIntercal 10 还有 ClientAliveCountMax 3即可，意思就是说sshd服务端程序主动去发送小心给客户端（A主机），A主机如果与B保持连接，那么肯定会给予B回复，否则不回，这样就是使得10秒之后，count值+1，直到3，sshd程序就会主动把占用端口的sshd子进程杀掉，让出端口来。这时候就等待A主机建立连接就可以了！\n> \n> 副：测试发现，也有小概率出现，在A主机端发现autossh进程在，ssh进程也在，但是在B主机端用netstat -antp发现没有在监听44444端口。这时，需要在B主机端主动杀掉netstat -antp结果中那个本地22的端口后边对应的sshd:root所在的pid号。这时，你再netstat -antp，会发现44444已经出来了，在A主机上，ps可以看到autossh进程号没有改变，但是ssh进程改变了，是因为B主机端主动杀掉了连接，所以ssh又一次重连。 \n> \n如果想要A主机重启之后，也可以保持自动ssh反向连接，那么需要追加到相应脚本下实现开机自启动。\n\n## 参考文献\n\nhttp://www.jb51.net/hack/58514.html\n\nhttp://blog.chinaunix.net/uid-20109107-id-2954579.html\n\nhttp://www.cnblogs.com/eshizhan/archive/2012/07/16/2592902.html","source":"_posts/sshreverse.md","raw":"title: ssh 反向代理    \ndate: 2014-10-16 14:01:01\ncategories: 网络技术 \ntags: [ssh反向代理,ssh,穿越内网] \n\n---\n\n为了解决无法突破对远端设备所在内网访问的限制，ssh提供了一套反向代理机制来解决问题。\n\n<!--more-->\n## 1.原理图\n\n![image description](http://img-storage.qiniudn.com/15-8-9/87726795.jpg)\n\n## 2.使用方法\n##### 2.1 在A下\n\n```\nssh -NfR 2222:localhost:22 httpd@100.100.100.100 -p 22\n```\n（连接对方22的端口，并把B主机的2222端口 与 本地A主机的22端口映射，即建立通信线路。用httpd这个用户名登陆B主机，B主机ip为100.100.100.100）\n##### 2.2 在B下\n\n```\nssh -p 2222 exe@localhost\n```\n\n（B主机通过ssh客户端连接自己本地的2222端口，并用exe登陆远程A主机）\n\n（也可以不用输入exe@，直接输入ssh -p 2222 localhost即可）\n\n**这里需要说明的是，为了使B区分不同的远程主机，即可用端口号加以区分。**\n\n##### 2.3 为了解决内网A主机 第一次主动连接B主机时，需要输入密码的问题，还有ssh生命周期时间太短的问题。我们可以采用ssh-keygen和autossh解决。\n\na.在A主机上键入：\n```\nssh-keygen\n```\n ，依次点下去，会在~目录下的.ssh/中生成一个ida_rsa.pub的文件，把这个文件通过scp拷贝到远程主机B上\n\nb.在B主机上键入：\n```\ncat ida_rsa.pub >> ~/.ssh/authorized_keys\n```\n\n\n此时，A主机已经免输密码。\n\nc.接着我们在A主机下安装一个autossh （ubuntu可采用apt-get install autossh安装，嵌入式设备可能需要移植）\n\n~~d.在A主机上键入 \n```\nautossh -M 5678 -NR 2222:localhost:22 root@100.100.100.100 -p 22  & \n```\n\n此时，A主机与B主机的SSH通道一直会保持在线了。~~\n\n\n##### 2.4 经测试发现，这条命令并不适用于3G网卡传输的方式，因为3G的无线传输方式本身就有传输可能会断掉的缺点。如果A主机端为一个3G网络的环境，那么需要在A主机上使用以下方法解决。\nd1.    \n```\nautossh -M 0 -q -N -o ServerAliveInterval=10 -o ServerAliveCountMax=3 -R 44444:localhost:22 root@100.100.100.100\n```\n这条命令的作用比上一条多了一个心跳信息，就是说A主机的ssh每隔10秒会主动给B主机的sshd发送心跳信息，这时候B主机sshd会给予A主机ssh一个响应信息，这是一个过程，如果B主机没有给予ssh一个响应信息，那么ServerAliveCountMax值+1，当ServerAliveCountMax等于3时，ssh客户端认为已经断掉，这时候ssh会自己关闭相关端口和进程，然后由autossh自动启动ssh客户端，再一次连接，也就是说完成一次检测网络状态，需要30秒，如果30秒，由于网络阻塞或者其他问题，那么ssh会主动关闭。\n\nd2.   另外，由于是3G网络环境（测试发现，如果3G网络异常断开，那么autossh进程会死掉），所以需要加入一小段监控的shell脚本，定期检测autossh是否存在，如果不存在则重启，如果存在阻塞几秒继续监控。\n\nd3.   上边配置了A主机，还需要配置B主机（服务器），首先要说的是，当用d1的那条命令后，会使得服务器端ssh连接异常，也就是说putty可能登陆不上去，重启也无效（这个可能是特例，总之咱不知道具体原因），查了一些资料，说是要更改ssh客户端的配置即可（这里不明白），具体做法是/etc/ssh/ssh_config这个文件中，加入ServerAliveInterval 60即可，据说是防被踢，但是不理解。。。。。\n\nd4. 另外我们使用netstat -antp命令可以看到linux当前网络的端口占用情况。测试的时候我发现A主机的3G网络异常断开之后，A主机的autossh自然死掉了。但是在B主机netstat -antp时，还是可以看到系统在监听44444端口，后边的进程是sshd 服务端程序启动的，如果我们在B主机上不做任何设置，那么会导致B主机44444端口一直处于无效状态，即便A主机设置重新启动autossh，也无法再B主机通过44444与A主机建立连接。解决方法是打开/etc/ssh/sshd_config配置文件，在最后边添加或者更改ClientAliveIntercal 10 还有 ClientAliveCountMax 3即可，意思就是说sshd服务端程序主动去发送小心给客户端（A主机），A主机如果与B保持连接，那么肯定会给予B回复，否则不回，这样就是使得10秒之后，count值+1，直到3，sshd程序就会主动把占用端口的sshd子进程杀掉，让出端口来。这时候就等待A主机建立连接就可以了！\n> \n> 副：测试发现，也有小概率出现，在A主机端发现autossh进程在，ssh进程也在，但是在B主机端用netstat -antp发现没有在监听44444端口。这时，需要在B主机端主动杀掉netstat -antp结果中那个本地22的端口后边对应的sshd:root所在的pid号。这时，你再netstat -antp，会发现44444已经出来了，在A主机上，ps可以看到autossh进程号没有改变，但是ssh进程改变了，是因为B主机端主动杀掉了连接，所以ssh又一次重连。 \n> \n如果想要A主机重启之后，也可以保持自动ssh反向连接，那么需要追加到相应脚本下实现开机自启动。\n\n## 参考文献\n\nhttp://www.jb51.net/hack/58514.html\n\nhttp://blog.chinaunix.net/uid-20109107-id-2954579.html\n\nhttp://www.cnblogs.com/eshizhan/archive/2012/07/16/2592902.html","slug":"sshreverse","published":1,"updated":"2015-08-09T06:51:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid44wjwt0003rud3kx8j628f"},{"title":"phpmyadmin导入excel表格->mysql","date":"2015-07-26T00:23:23.000Z","description":"介绍phpmyadmin导入excel的方法","_content":"\n### 写在开头\n帮助文档以phpMyadmin数据库建表开始，然后再到后边的用csv导入到数据库表中。写这些的目的是 因为插入的东西是中文，所以需要注意编码问题。\n<!--more-->\n### 用到的工具\nexcel，phpmyadmin，emeditor\n### 过程\n- phpMyadmin建表\n登陆lorne.pw/database中，在新建数据库中写上数据库名字 divider，整理选择utf8_general_ci，然后点击创建。\n\n![image description](http://img-storage.qiniudn.com/15-8-8/98049354.jpg)\n\n- 选择进入数据库divider，然后选择新建一张表，写上名字dividerInfo，并写上字段5个，然后点击执行。\n\n![image description](http://img-storage.qiniudn.com/15-8-8/10194909.jpg)\n\n- 在这张新建数据表的窗口下，点击添加各字段详细信息，如下，值得注意的是中文用varchar就好，长度写上大概的就可以：\n\n![image description](http://img-storage.qiniudn.com/15-8-8/61706716.jpg)\n\n- 在同一个窗口下，注意选择整理：然后选择utf8_general_ci，然后点击保存表就建好了。\n\n![image description](http://img-storage.qiniudn.com/15-8-8/5406617.jpg)\n\n- 新建excel表格，编辑学生信息，如下所示：\n（注意列的顺序与表要严格一致，第一行不需要些字段名称）\n\n![image description](http://img-storage.qiniudn.com/15-8-8/20837690.jpg)\n\n- 编辑完点击文件-另存为-计算机，然后弹出对话框，点击对话框的工具-web选项-编码。\n\n\n![image description](http://img-storage.qiniudn.com/15-8-8/87494927.jpg)\n\n- 选择将此文档另存为uniconde(UTF-8),然后点击确定，此时进入第10步。\n\n\n![image description](http://img-storage.qiniudn.com/15-8-8/5380601.jpg)\n\n- 在下图中选择保存为csv格式。\n\n![image description](http://img-storage.qiniudn.com/15-8-8/54058994.jpg)\n\n\n- 此时桌面出现csv格式后，这时就可以进入12步，把csv上传到phpMyadmin中。\n在phpMyadmin主界面，选择数据库divider，然后选择表dividerInfo，最后选择导入。\n\n![image description](http://img-storage.qiniudn.com/15-8-8/91318425.jpg)\n\n- 选择从计算机中上传student.csv文件。其他不用管，配置如图所示。\n\n ![image description](http://img-storage.qiniudn.com/15-8-8/44047196.jpg)\n\n- 此时还需要一步，就是在桌面生成的student.csv文件，右键用windows自带的记事本打\n\n ![image description](http://img-storage.qiniudn.com/15-8-8/60755242.jpg)\n \n*** *附**\n ![image description](http://img-storage.qiniudn.com/15-8-8/28900338.jpg)\n \n** 其实有一种更为简单的方法，就是直接在桌面上右键新建一个txt，然后用自带的记事本编辑，\n比如编辑：\n11,胡威,99,三中,高一5班\n12,胡方法,10,二中,高一10班\n\n\n这个方法需要注意的事项是每个字段与每个字段之间的逗号必须要用英文的逗号。\n编辑结束后，点击文件另存为，选择编码为utf-8，保存为csv格式。这种方法不适合批量输入，因为不方便输入逗号\n**\n\n\n\n","source":"_posts/phpmyadmin.md","raw":"title: phpmyadmin导入excel表格->mysql \ndate: 2015-7-25 20:23:23\ncategories: 数据库技术 \ntags: [excel,phpmyadmin]\ndescription: 介绍phpmyadmin导入excel的方法\n---\n\n### 写在开头\n帮助文档以phpMyadmin数据库建表开始，然后再到后边的用csv导入到数据库表中。写这些的目的是 因为插入的东西是中文，所以需要注意编码问题。\n<!--more-->\n### 用到的工具\nexcel，phpmyadmin，emeditor\n### 过程\n- phpMyadmin建表\n登陆lorne.pw/database中，在新建数据库中写上数据库名字 divider，整理选择utf8_general_ci，然后点击创建。\n\n![image description](http://img-storage.qiniudn.com/15-8-8/98049354.jpg)\n\n- 选择进入数据库divider，然后选择新建一张表，写上名字dividerInfo，并写上字段5个，然后点击执行。\n\n![image description](http://img-storage.qiniudn.com/15-8-8/10194909.jpg)\n\n- 在这张新建数据表的窗口下，点击添加各字段详细信息，如下，值得注意的是中文用varchar就好，长度写上大概的就可以：\n\n![image description](http://img-storage.qiniudn.com/15-8-8/61706716.jpg)\n\n- 在同一个窗口下，注意选择整理：然后选择utf8_general_ci，然后点击保存表就建好了。\n\n![image description](http://img-storage.qiniudn.com/15-8-8/5406617.jpg)\n\n- 新建excel表格，编辑学生信息，如下所示：\n（注意列的顺序与表要严格一致，第一行不需要些字段名称）\n\n![image description](http://img-storage.qiniudn.com/15-8-8/20837690.jpg)\n\n- 编辑完点击文件-另存为-计算机，然后弹出对话框，点击对话框的工具-web选项-编码。\n\n\n![image description](http://img-storage.qiniudn.com/15-8-8/87494927.jpg)\n\n- 选择将此文档另存为uniconde(UTF-8),然后点击确定，此时进入第10步。\n\n\n![image description](http://img-storage.qiniudn.com/15-8-8/5380601.jpg)\n\n- 在下图中选择保存为csv格式。\n\n![image description](http://img-storage.qiniudn.com/15-8-8/54058994.jpg)\n\n\n- 此时桌面出现csv格式后，这时就可以进入12步，把csv上传到phpMyadmin中。\n在phpMyadmin主界面，选择数据库divider，然后选择表dividerInfo，最后选择导入。\n\n![image description](http://img-storage.qiniudn.com/15-8-8/91318425.jpg)\n\n- 选择从计算机中上传student.csv文件。其他不用管，配置如图所示。\n\n ![image description](http://img-storage.qiniudn.com/15-8-8/44047196.jpg)\n\n- 此时还需要一步，就是在桌面生成的student.csv文件，右键用windows自带的记事本打\n\n ![image description](http://img-storage.qiniudn.com/15-8-8/60755242.jpg)\n \n*** *附**\n ![image description](http://img-storage.qiniudn.com/15-8-8/28900338.jpg)\n \n** 其实有一种更为简单的方法，就是直接在桌面上右键新建一个txt，然后用自带的记事本编辑，\n比如编辑：\n11,胡威,99,三中,高一5班\n12,胡方法,10,二中,高一10班\n\n\n这个方法需要注意的事项是每个字段与每个字段之间的逗号必须要用英文的逗号。\n编辑结束后，点击文件另存为，选择编码为utf-8，保存为csv格式。这种方法不适合批量输入，因为不方便输入逗号\n**\n\n\n\n","slug":"phpmyadmin","published":1,"updated":"2015-08-09T05:51:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid44wjxj000crud3br82l1rf"},{"title":"linux中的内存管理","date":"2015-08-01T18:01:01.000Z","description":null,"_content":"\n前一段时间看了《深入理解Linux内核》对其中的内存管理部分花了不少时间，但是还是有很多问题不是很清楚，最近又花了一些时间复习了一下，在这里记录下自己的理解和对Linux中内存管理的一些看法和认识。\n<!--more-->\n我比较喜欢搞清楚一个技术本身的发展历程，简而言之就是这个技术是怎么发展而来的，在这个技术之前存在哪些技术，这些技术有哪些特点，为什么会被目前的技术所取代，而目前的技术又解决了之前的技术所存在的哪些问题。弄清楚了这些，我们才能比较清晰的把握某一项技术。有些资料在介绍某个概念的时候直接就介绍这个概念的意义，原理，而对其发展过程和背后的原理丝毫不提，仿佛这个技术从天上掉下来的一样。介于此，还是以内存管理的发展历程来讲述今天的主题。\n首先，我必须要阐述一下这篇文章的主题是Linux内存管理中的分段和分页技术。\n让我们来回顾一下历史，在早期的计算机中，程序是直接运行在物理内存上的。换句话说，就是程序在运行的过程中访问的都是物理地址。如果这个系统只运行一个程序，那么只要这个程序所需的内存不要超过该机器的物理内存就不会出现问题，我们也就不需要考虑内存管理这个麻烦事了，反正就你一个程序，就这么点内存，吃不吃得饱那是你的事情了。然而现在的系统都是支持多任务，多进程的，这样CPU以及其他硬件的利用率会更高，这个时候我们就要考虑到将系统内有限的物理内存如何及时有效的分配给多个程序了，这个事情本身我们就称之为内存管理。\n下面举一个早期的计算机系统中，内存分配管理的例子，以便于大家理解。\n加入我们有三个程序，程序1，2，3.程序1运行的过程中需要10M内存，程序2运行的过程中需要100M内存，而程序3运行的过程中需要20M内存。如果系统同时需要运行程序A和B，那么早期的内存管理过程大概是这样的，将物理内存的前10M分配给A, 接下来的10M-110M分配给B。这种内存管理的方法比较直接，好了，假设我们这个时候想让程序C也运行，同时假设我们系统的内存只有128M，显然按照这种方法程序C由于内存不够是不能够运行的。大家知道可以使用虚拟内存的技术，内存空间不够的时候可以将程序不需要用到的数据交换到磁盘空间上去，已达到扩展内存空间的目的。下面我们来看看这种内存管理方式存在的几个比较明显的问题。就像文章一开始提到的，要很深层次的把握某个技术最好搞清楚其发展历程。\n### 进程地址空间不能隔离\n\n由于程序直接访问的是物理内存，这个时候程序所使用的内存空间不是隔离的。举个例子，就像上面说的A的地址空间是0-10M这个范围内，但是如果A中有一段代码是操作10M-128M这段地址空间内的数据，那么程序B和程序C就很可能会崩溃（每个程序都可以系统的整个地址空间）。这样很多恶意程序或者是木马程序可以轻而易举的破快其他的程序，系统的安全性也就得不到保障了，这对用户来说也是不能容忍的。\n### 内存使用的效率低\n\n如上面提到的，如果我们要像让程序A、B、C同时运行，那么唯一的方法就是使用虚拟内存技术将一些程序暂时不用的数据写到磁盘上，在需要的时候再从磁盘读回内存。这里程序C要运行，将A交换到磁盘上去显然是不行的，因为程序是需要连续的地址空间的，程序C需要20M的内存，而A只有10M的空间，所以需要将程序B交换到磁盘上去，而B足足有100M，可以看到为了运行程序C我们需要将100M的数据从内存写到磁盘，然后在程序B需要运行的时候再从磁盘读到内存，我们知道IO操作比较耗时，所以这个过程效率将会十分低下。\n### 程序运行的地址不能确定\n\n程序每次需要运行时，都需要在内存中非配一块足够大的空闲区域，而问题是这个空闲的位置是不能确定的，这会带来一些重定位的问题，重定位的问题确定就是程序中引用的变量和函数的地址，如果有不明白童鞋可以去查查编译原理方面的资料。\n内存管理无非就是想办法解决上面三个问题，如何使进程的地址空间隔离，如何提高内存的使用效率，如何解决程序运行时的重定位问题？\n这里引用计算机界一句无从考证的名言：“计算机系统里的任何问题都可以靠引入一个中间层来解决。”\n现在的内存管理方法就是在程序和物理内存之间引入了虚拟内存这个概念。虚拟内存位于程序和物理内存之间，程序只能看见虚拟内存，再也不能直接访问物理内存。每个程序都有自己独立的进程地址空间，这样就做到了进程隔离。这里的进程地址空间是指虚拟地址。顾名思义既然是虚拟地址，也就是虚的，不是现实存在的地址空间。\n既然我们在程序和物理地址空间之间增加了虚拟地址，那么就要解决怎么从虚拟地址映射到物理地址，因为程序最终肯定是运行在物理内存中的，主要有分段和分页两种技术。\n分段(Segmentation)：这种方法是人们最开始使用的一种方法，基本思路是将程序所需要的内存地址空间大小的虚拟空间映射到某个\n物理地址空间。\n\n![image description](http://blog.chinaunix.net/attachment/201306/11/26611383_1370963405d40G.jpg)\n每个程序都有其独立的虚拟的独立的进程地址空间，可以看到程序A和B的虚拟地址空间都是从0x00000000开始的。我们将两块大小相同的虚拟地址空间和实际物理地址空间一一映射，即虚拟地址空间中的每个字节对应于实际地址空间中的每个字节，这个映射过程由软件来设置映射的机制，实际的转换由硬件来完成。\n这种分段的机制解决了文章一开始提到的3个问题中的进程地址空间隔离和程序地址重定位的问题。程序A和程序B有自己独立的虚拟地址空间，而且该虚拟地址空间被映射到了互相不重叠的物理地址空间，如果程序A访问虚拟地址空间的地址不在0x00000000-0x00A00000这个范围内，那么内核就会拒绝这个请求，所以它解决了隔离地址空间的问题。我们应用程序A只需要关心其虚拟地址空间0x00000000-0x00A00000，而其被映射到哪个物理地址我们无需关心，所以程序永远按照这个虚拟地址空间来放置变量，代码，不需要重新定位。\n无论如何分段机制解决了上面两个问题，是一个很大的进步，但是对于内存效率问题仍然无能为力。因为这种内存映射机制仍然是以程序为单位，当内存不足时仍然需要将整个程序交换到磁盘，这样内存使用的效率仍然很低。那么，怎么才算高效率的内存使用呢。事实上，根据程序的局部性运行原理，一个程序在运行的过程当中，在某个时间段内，只有一小部分数据会被经常用到。所以我们需要更加小粒度的内存分割和映射方法，此时是否会想到Linux中的Buddy算法和slab内存分配机制呢，哈哈。另一种将虚拟地址转换为物理地址的方法分页机制应运而生了。\n分页机制：\n分页机制就是把内存地址空间分为若干个很小的固定大小的页，每一页的大小由内存决定，就像Linux中ext文件系统将磁盘分成若干个Block一样，这样做是分别是为了提高内存和磁盘的利用率。试想以下，如果将磁盘空间分成N等份，每一份的大小(一个Block)是1M，如果我想存储在磁盘上的文件是1K字节，那么其余的999K字节是不是浪费了。所以需要更加细粒度的磁盘分割方式，我们可以将Block设置得小一点，这当然是根据所存放文件的大小来综合考虑的，好像有点跑题了，我只是想说，内存中的分页机制跟ext文件系统中的磁盘分割机制非常相似。\nLinux中一般页的大小是4KB，我们把进程的地址空间按页分割，把常用的数据和代码页装载到内存中，不常用的代码和数据保存在磁盘中，我们还是以一个例子来说明,如下图：\n\n![进程虚拟地址空间、物理地址空间和磁盘之间的页映射关系](http://blog.chinaunix.net/attachment/201306/11/26611383_1370963405d40G.jpg)\n\n我们可以看到进程1和进程2的虚拟地址空间都被映射到了不连续的物理地址空间内(这个意义很大，如果有一天我们的连续物理地址空间不够，但是不连续的地址空间很多，如果没有这种技术，我们的程序就没有办法运行),甚至他们共用了一部分物理地址空间，这就是共享内存。\n进程1的虚拟页VP2和VP3被交换到了磁盘中，在程序需要这两页的时候，Linux内核会产生一个缺页异常，然后异常管理程序会将其读到内存中。\n这就是分页机制的原理，当然Linux中的分页机制的实现还是比较复杂的，通过了也全局目录，也上级目录，页中级目录，页表等几级的分页机制来实现的，但是基本的工作原理是不会变的。\n分页机制的实现需要硬件的实现，这个硬件名字叫做MMU(Memory Management Unit)，他就是专门负责从虚拟地址到物理地址转换的，也就是从虚拟页找到物理页。\n\n\n参考文献：\n《深入理解Linux内核》\n《程序员的自我修养》","source":"_posts/linuxneicunguanli.md","raw":"title: linux中的内存管理 \ndate: 2015-8-1 14:01:01\ncategories: 转载文章 \ntags: [linux,内存管理,分页技术] \ndescription: \n---\n\n前一段时间看了《深入理解Linux内核》对其中的内存管理部分花了不少时间，但是还是有很多问题不是很清楚，最近又花了一些时间复习了一下，在这里记录下自己的理解和对Linux中内存管理的一些看法和认识。\n<!--more-->\n我比较喜欢搞清楚一个技术本身的发展历程，简而言之就是这个技术是怎么发展而来的，在这个技术之前存在哪些技术，这些技术有哪些特点，为什么会被目前的技术所取代，而目前的技术又解决了之前的技术所存在的哪些问题。弄清楚了这些，我们才能比较清晰的把握某一项技术。有些资料在介绍某个概念的时候直接就介绍这个概念的意义，原理，而对其发展过程和背后的原理丝毫不提，仿佛这个技术从天上掉下来的一样。介于此，还是以内存管理的发展历程来讲述今天的主题。\n首先，我必须要阐述一下这篇文章的主题是Linux内存管理中的分段和分页技术。\n让我们来回顾一下历史，在早期的计算机中，程序是直接运行在物理内存上的。换句话说，就是程序在运行的过程中访问的都是物理地址。如果这个系统只运行一个程序，那么只要这个程序所需的内存不要超过该机器的物理内存就不会出现问题，我们也就不需要考虑内存管理这个麻烦事了，反正就你一个程序，就这么点内存，吃不吃得饱那是你的事情了。然而现在的系统都是支持多任务，多进程的，这样CPU以及其他硬件的利用率会更高，这个时候我们就要考虑到将系统内有限的物理内存如何及时有效的分配给多个程序了，这个事情本身我们就称之为内存管理。\n下面举一个早期的计算机系统中，内存分配管理的例子，以便于大家理解。\n加入我们有三个程序，程序1，2，3.程序1运行的过程中需要10M内存，程序2运行的过程中需要100M内存，而程序3运行的过程中需要20M内存。如果系统同时需要运行程序A和B，那么早期的内存管理过程大概是这样的，将物理内存的前10M分配给A, 接下来的10M-110M分配给B。这种内存管理的方法比较直接，好了，假设我们这个时候想让程序C也运行，同时假设我们系统的内存只有128M，显然按照这种方法程序C由于内存不够是不能够运行的。大家知道可以使用虚拟内存的技术，内存空间不够的时候可以将程序不需要用到的数据交换到磁盘空间上去，已达到扩展内存空间的目的。下面我们来看看这种内存管理方式存在的几个比较明显的问题。就像文章一开始提到的，要很深层次的把握某个技术最好搞清楚其发展历程。\n### 进程地址空间不能隔离\n\n由于程序直接访问的是物理内存，这个时候程序所使用的内存空间不是隔离的。举个例子，就像上面说的A的地址空间是0-10M这个范围内，但是如果A中有一段代码是操作10M-128M这段地址空间内的数据，那么程序B和程序C就很可能会崩溃（每个程序都可以系统的整个地址空间）。这样很多恶意程序或者是木马程序可以轻而易举的破快其他的程序，系统的安全性也就得不到保障了，这对用户来说也是不能容忍的。\n### 内存使用的效率低\n\n如上面提到的，如果我们要像让程序A、B、C同时运行，那么唯一的方法就是使用虚拟内存技术将一些程序暂时不用的数据写到磁盘上，在需要的时候再从磁盘读回内存。这里程序C要运行，将A交换到磁盘上去显然是不行的，因为程序是需要连续的地址空间的，程序C需要20M的内存，而A只有10M的空间，所以需要将程序B交换到磁盘上去，而B足足有100M，可以看到为了运行程序C我们需要将100M的数据从内存写到磁盘，然后在程序B需要运行的时候再从磁盘读到内存，我们知道IO操作比较耗时，所以这个过程效率将会十分低下。\n### 程序运行的地址不能确定\n\n程序每次需要运行时，都需要在内存中非配一块足够大的空闲区域，而问题是这个空闲的位置是不能确定的，这会带来一些重定位的问题，重定位的问题确定就是程序中引用的变量和函数的地址，如果有不明白童鞋可以去查查编译原理方面的资料。\n内存管理无非就是想办法解决上面三个问题，如何使进程的地址空间隔离，如何提高内存的使用效率，如何解决程序运行时的重定位问题？\n这里引用计算机界一句无从考证的名言：“计算机系统里的任何问题都可以靠引入一个中间层来解决。”\n现在的内存管理方法就是在程序和物理内存之间引入了虚拟内存这个概念。虚拟内存位于程序和物理内存之间，程序只能看见虚拟内存，再也不能直接访问物理内存。每个程序都有自己独立的进程地址空间，这样就做到了进程隔离。这里的进程地址空间是指虚拟地址。顾名思义既然是虚拟地址，也就是虚的，不是现实存在的地址空间。\n既然我们在程序和物理地址空间之间增加了虚拟地址，那么就要解决怎么从虚拟地址映射到物理地址，因为程序最终肯定是运行在物理内存中的，主要有分段和分页两种技术。\n分段(Segmentation)：这种方法是人们最开始使用的一种方法，基本思路是将程序所需要的内存地址空间大小的虚拟空间映射到某个\n物理地址空间。\n\n![image description](http://blog.chinaunix.net/attachment/201306/11/26611383_1370963405d40G.jpg)\n每个程序都有其独立的虚拟的独立的进程地址空间，可以看到程序A和B的虚拟地址空间都是从0x00000000开始的。我们将两块大小相同的虚拟地址空间和实际物理地址空间一一映射，即虚拟地址空间中的每个字节对应于实际地址空间中的每个字节，这个映射过程由软件来设置映射的机制，实际的转换由硬件来完成。\n这种分段的机制解决了文章一开始提到的3个问题中的进程地址空间隔离和程序地址重定位的问题。程序A和程序B有自己独立的虚拟地址空间，而且该虚拟地址空间被映射到了互相不重叠的物理地址空间，如果程序A访问虚拟地址空间的地址不在0x00000000-0x00A00000这个范围内，那么内核就会拒绝这个请求，所以它解决了隔离地址空间的问题。我们应用程序A只需要关心其虚拟地址空间0x00000000-0x00A00000，而其被映射到哪个物理地址我们无需关心，所以程序永远按照这个虚拟地址空间来放置变量，代码，不需要重新定位。\n无论如何分段机制解决了上面两个问题，是一个很大的进步，但是对于内存效率问题仍然无能为力。因为这种内存映射机制仍然是以程序为单位，当内存不足时仍然需要将整个程序交换到磁盘，这样内存使用的效率仍然很低。那么，怎么才算高效率的内存使用呢。事实上，根据程序的局部性运行原理，一个程序在运行的过程当中，在某个时间段内，只有一小部分数据会被经常用到。所以我们需要更加小粒度的内存分割和映射方法，此时是否会想到Linux中的Buddy算法和slab内存分配机制呢，哈哈。另一种将虚拟地址转换为物理地址的方法分页机制应运而生了。\n分页机制：\n分页机制就是把内存地址空间分为若干个很小的固定大小的页，每一页的大小由内存决定，就像Linux中ext文件系统将磁盘分成若干个Block一样，这样做是分别是为了提高内存和磁盘的利用率。试想以下，如果将磁盘空间分成N等份，每一份的大小(一个Block)是1M，如果我想存储在磁盘上的文件是1K字节，那么其余的999K字节是不是浪费了。所以需要更加细粒度的磁盘分割方式，我们可以将Block设置得小一点，这当然是根据所存放文件的大小来综合考虑的，好像有点跑题了，我只是想说，内存中的分页机制跟ext文件系统中的磁盘分割机制非常相似。\nLinux中一般页的大小是4KB，我们把进程的地址空间按页分割，把常用的数据和代码页装载到内存中，不常用的代码和数据保存在磁盘中，我们还是以一个例子来说明,如下图：\n\n![进程虚拟地址空间、物理地址空间和磁盘之间的页映射关系](http://blog.chinaunix.net/attachment/201306/11/26611383_1370963405d40G.jpg)\n\n我们可以看到进程1和进程2的虚拟地址空间都被映射到了不连续的物理地址空间内(这个意义很大，如果有一天我们的连续物理地址空间不够，但是不连续的地址空间很多，如果没有这种技术，我们的程序就没有办法运行),甚至他们共用了一部分物理地址空间，这就是共享内存。\n进程1的虚拟页VP2和VP3被交换到了磁盘中，在程序需要这两页的时候，Linux内核会产生一个缺页异常，然后异常管理程序会将其读到内存中。\n这就是分页机制的原理，当然Linux中的分页机制的实现还是比较复杂的，通过了也全局目录，也上级目录，页中级目录，页表等几级的分页机制来实现的，但是基本的工作原理是不会变的。\n分页机制的实现需要硬件的实现，这个硬件名字叫做MMU(Memory Management Unit)，他就是专门负责从虚拟地址到物理地址转换的，也就是从虚拟页找到物理页。\n\n\n参考文献：\n《深入理解Linux内核》\n《程序员的自我修养》","slug":"linuxneicunguanli","published":1,"updated":"2015-08-09T06:04:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid44wjxt000jrud3sj3lvlnm"},{"title":"基于Hadoop平台的局域网和广域网环境下的处理性能比较","date":"2015-01-11T19:01:01.000Z","_content":"\n## 测试目标\n检验在局域网环境下的hadoop平台与广域网环境下通过VPN组建的hadoop平台在处理性能上的差异。\n实际上检测网络通信情况，通过hadoop的terasort示例工具来做排序的压力测试，通过对比排序所用时间来确定差异。\n\n<!--more-->\n## 测试环境\n\nhadoop-1.0.0\n三台vmware下的ubuntu12.04，一台为Master，两台为Slave。\n\n## 实验步骤\n### 测试局域网环境下的计算性能\na.首先搭建hadoop平台\n\nb.搭建好hadoop平台后，通过master启动hadoop\n\nc.本人hadoop装在/usr/hadoop下，首先先通过teragen工具产生一定的随机数据\n\nd.在/usr/hadoop下运行bin/hadoop jar hadoop-examples-1.0.0.jar\n\nteragen 10000000 input\n(即产生1G的文本数据，每行有100个字节，所以总共有一千万行的随机数据，产生的数据存入到hdfs用户目录的input下)\n(附：有时候输入命令，无反应。\n\n出现如下错误：\n\n　　org.apache.hadoop.dfs.SafeModeException: Cannot delete ..., Name node is in safe mode\n\n　　在分布式文件系统启动的时候，开始的时候会有安全模式，当分布式文件系统处于安全模式的情况下，文件系统中的内容不允许修改也不允许删除，直到安全模式结束。安全模式主要是为了系统启动的时候检查各个DataNode上数据块的有效性，同时根据策略必要的复制或者删除部分数据块。运行期通过命令也可以进入安全模式。在实践过程中，系统启动的时候去修改和删除文件也会有安全模式不允许修改的出错提示，只需要等待一会儿即可。\n\n　　解决方案是：关闭安全模式\n　　\n　　\n```\nhadoop dfsadmin -safemode leave\n```\ne.运行结束后，然后运行bin/hadoop jar hadoop-examples-1.0.0.jar terasort input output\n(这条命令是让hadoop执行文本数据的排序，从input读，最终产生的文件也在hdfs的output文件夹下，会生成一个单一的文件。)\n\nf.同时还可用/bin/hadoop jar hadoop-examples-1.0.0.jar teravalidate output validate 来执行检验排序的正确与否。\n#### 结果\n（1）通过6次重复实验，可根据e运行的结果如下：\n\n第一次：5分3秒\n第二次：4分34秒\n第三次：3分44秒\n第四次：4分20秒\n第五次：4分20秒\n第六次：3分59秒\n\n（2）同时观察到两个Slave节点在map和reduce的过程中，cpu和内存充分被利用，cpu占用率大概在60%-75%之间，内存占用百分之90以上。而当总的运算进度已达到百分之70多的时候，有一个节点的cpu和内存已经空闲，说明他自己的运算工作已经完成，另一个节点在总进度达到100%时cpu和内存变为空闲。另外，在hadoop刚刚开始运算的时候，Master瞬间cpu占用比高，之后运算空闲。这也验证了Hadoop平台的主从架构。\n### 测试广域网环境下的计算性能\n广域网测试延迟巨大，处理速度差异巨大。\n## 结论\n分布式的处理架构，对网络带宽的要求苛刻。一般内网中组建的hadoop平台，网络带宽应该在100M。如果公网能找到这样的环境，应该也是可以的。但是这种环境搭建成本太高，所以hadoop平台在广域网范围下的应用失败。\n（据说，处理1TB的数据，需要在网络中传输3TB的数据。）\n\n## 附录\n\n```\nhadoop@Master:/usr/hadoop$ bin/hadoop jar hadoop-examples-1.0.0.jar teragen 10000000 in4\nWarning: $HADOOP_HOME is deprecated.\n\n\nGenerating 10000000 using 2 maps with step of 5000000\n15/01/09 18:35:30 INFO mapred.JobClient: Running job: job_201501101813_0020\n15/01/09 18:35:31 INFO mapred.JobClient:  map 0% reduce 0%\n15/01/09 18:35:47 INFO mapred.JobClient:  map 17% reduce 0%\n15/01/09 18:35:50 INFO mapred.JobClient:  map 40% reduce 0%\n15/01/09 18:35:53 INFO mapred.JobClient:  map 46% reduce 0%\n15/01/09 18:35:54 INFO mapred.JobClient:  map 56% reduce 0%\n15/01/09 18:35:57 INFO mapred.JobClient:  map 61% reduce 0%\n15/01/09 18:35:59 INFO mapred.JobClient:  map 75% reduce 0%\n15/01/09 18:36:00 INFO mapred.JobClient:  map 84% reduce 0%\n15/01/09 18:36:03 INFO mapred.JobClient:  map 95% reduce 0%\n15/01/09 18:36:12 INFO mapred.JobClient:  map 100% reduce 0%\n15/01/09 18:36:17 INFO mapred.JobClient: Job complete: job_201501101813_0020\n15/01/09 18:36:17 INFO mapred.JobClient: Counters: 19\n15/01/09 18:36:17 INFO mapred.JobClient:   Job Counters\n15/01/09 18:36:17 INFO mapred.JobClient:     SLOTS_MILLIS_MAPS=55752\n15/01/09 18:36:17 INFO mapred.JobClient:     Total time spent by all reduces waiting after reserving slots (ms)=0\n15/01/09 18:36:17 INFO mapred.JobClient:     Total time spent by all maps waiting after reserving slots (ms)=0\n15/01/09 18:36:17 INFO mapred.JobClient:     Launched map tasks=2\n15/01/09 18:36:17 INFO mapred.JobClient:     SLOTS_MILLIS_REDUCES=0\n15/01/09 18:36:17 INFO mapred.JobClient:   File Input Format Counters\n15/01/09 18:36:17 INFO mapred.JobClient:     Bytes Read=0\n15/01/09 18:36:17 INFO mapred.JobClient:   File Output Format Counters\n15/01/09 18:36:17 INFO mapred.JobClient:     Bytes Written=1000000000\n15/01/09 18:36:17 INFO mapred.JobClient:   FileSystemCounters\n15/01/09 18:36:17 INFO mapred.JobClient:     HDFS_BYTES_READ=167\n15/01/09 18:36:17 INFO mapred.JobClient:     FILE_BYTES_WRITTEN=42624\n15/01/09 18:36:17 INFO mapred.JobClient:     HDFS_BYTES_WRITTEN=1000000000\n15/01/09 18:36:17 INFO mapred.JobClient:   Map-Reduce Framework\n15/01/09 18:36:17 INFO mapred.JobClient:     Map input records=10000000\n15/01/09 18:36:17 INFO mapred.JobClient:     Physical memory (bytes) snapshot=77443072\n15/01/09 18:36:17 INFO mapred.JobClient:     Spilled Records=0\n15/01/09 18:36:17 INFO mapred.JobClient:     CPU time spent (ms)=14870\n15/01/09 18:36:17 INFO mapred.JobClient:     Total committed heap usage (bytes)=31850496\n15/01/09 18:36:17 INFO mapred.JobClient:     Virtual memory (bytes) snapshot=694943744\n15/01/09 18:36:17 INFO mapred.JobClient:     Map input bytes=10000000\n15/01/09 18:36:17 INFO mapred.JobClient:     Map output records=10000000\n15/01/09 18:36:17 INFO mapred.JobClient:     SPLIT_RAW_BYTES=167\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\nhadoop@Master:/usr/hadoop$ bin/hadoop jar hadoop-examples-1.0.0.jar terasort in4                                                                              out4\nWarning: $HADOOP_HOME is deprecated.\n\n\n15/01/09 18:36:49 INFO terasort.TeraSort: starting\n15/01/09 18:36:50 INFO mapred.FileInputFormat: Total input paths to process : 2\n15/01/09 18:36:50 INFO util.NativeCodeLoader: Loaded the native-hadoop library\n15/01/09 18:36:50 INFO zlib.ZlibFactory: Successfully loaded & initialized native-zlib library\n15/01/09 18:36:50 INFO compress.CodecPool: Got brand-new compressor\nMaking 1 from 100000 records\nStep size is 100000.0\n15/01/09 18:36:50 INFO mapred.FileInputFormat: Total input paths to process : 2\n15/01/09 18:36:51 INFO mapred.JobClient: Running job: job_201501101813_0021\n15/01/09 18:36:52 INFO mapred.JobClient:  map 0% reduce 0%\n15/01/09 18:37:09 INFO mapred.JobClient:  map 10% reduce 0%\n15/01/09 18:37:11 INFO mapred.JobClient:  map 21% reduce 0%\n15/01/09 18:37:12 INFO mapred.JobClient:  map 22% reduce 0%\n15/01/09 18:37:13 INFO mapred.JobClient:  map 24% reduce 0%\n15/01/09 18:37:17 INFO mapred.JobClient:  map 25% reduce 0%\n15/01/09 18:37:23 INFO mapred.JobClient:  map 30% reduce 0%\n15/01/09 18:37:26 INFO mapred.JobClient:  map 35% reduce 0%\n15/01/09 18:37:28 INFO mapred.JobClient:  map 36% reduce 0%\n15/01/09 18:37:33 INFO mapred.JobClient:  map 37% reduce 2%\n15/01/09 18:37:39 INFO mapred.JobClient:  map 37% reduce 4%\n15/01/09 18:37:42 INFO mapred.JobClient:  map 37% reduce 6%\n15/01/09 18:37:47 INFO mapred.JobClient:  map 37% reduce 8%\n15/01/09 18:37:48 INFO mapred.JobClient:  map 37% reduce 10%\n15/01/09 18:37:49 INFO mapred.JobClient:  map 44% reduce 10%\n15/01/09 18:37:52 INFO mapred.JobClient:  map 47% reduce 10%\n15/01/09 18:37:59 INFO mapred.JobClient:  map 49% reduce 10%\n15/01/09 18:38:01 INFO mapred.JobClient:  map 56% reduce 10%\n15/01/09 18:38:03 INFO mapred.JobClient:  map 60% reduce 10%\n15/01/09 18:38:06 INFO mapred.JobClient:  map 61% reduce 12%\n15/01/09 18:38:10 INFO mapred.JobClient:  map 62% reduce 12%\n15/01/09 18:38:16 INFO mapred.JobClient:  map 66% reduce 14%\n15/01/09 18:38:20 INFO mapred.JobClient:  map 68% reduce 16%\n15/01/09 18:38:21 INFO mapred.JobClient:  map 69% reduce 16%\n15/01/09 18:38:22 INFO mapred.JobClient:  map 69% reduce 18%\n15/01/09 18:38:29 INFO mapred.JobClient:  map 73% reduce 20%\n15/01/09 18:38:32 INFO mapred.JobClient:  map 83% reduce 20%\n15/01/09 18:38:35 INFO mapred.JobClient:  map 87% reduce 20%\n15/01/09 18:38:47 INFO mapred.JobClient:  map 93% reduce 25%\n15/01/09 18:38:51 INFO mapred.JobClient:  map 95% reduce 25%\n15/01/09 18:38:54 INFO mapred.JobClient:  map 98% reduce 25%\n15/01/09 18:38:57 INFO mapred.JobClient:  map 99% reduce 27%\n15/01/09 18:39:00 INFO mapred.JobClient:  map 100% reduce 29%\n15/01/09 18:39:03 INFO mapred.JobClient:  map 100% reduce 31%\n15/01/09 18:39:12 INFO mapred.JobClient:  map 100% reduce 33%\n15/01/09 18:39:30 INFO mapred.JobClient:  map 100% reduce 67%\n15/01/09 18:39:33 INFO mapred.JobClient:  map 100% reduce 69%\n15/01/09 18:39:36 INFO mapred.JobClient:  map 100% reduce 71%\n15/01/09 18:39:39 INFO mapred.JobClient:  map 100% reduce 73%\n15/01/09 18:39:42 INFO mapred.JobClient:  map 100% reduce 75%\n15/01/09 18:39:46 INFO mapred.JobClient:  map 100% reduce 77%\n15/01/09 18:39:49 INFO mapred.JobClient:  map 100% reduce 78%\n15/01/09 18:39:52 INFO mapred.JobClient:  map 100% reduce 79%\n15/01/09 18:39:55 INFO mapred.JobClient:  map 100% reduce 81%\n15/01/09 18:39:58 INFO mapred.JobClient:  map 100% reduce 83%\n15/01/09 18:40:01 INFO mapred.JobClient:  map 100% reduce 85%\n15/01/09 18:40:04 INFO mapred.JobClient:  map 100% reduce 86%\n15/01/09 18:40:07 INFO mapred.JobClient:  map 100% reduce 88%\n15/01/09 18:40:10 INFO mapred.JobClient:  map 100% reduce 90%\n15/01/09 18:40:13 INFO mapred.JobClient:  map 100% reduce 92%\n15/01/09 18:40:16 INFO mapred.JobClient:  map 100% reduce 94%\n15/01/09 18:40:19 INFO mapred.JobClient:  map 100% reduce 96%\n15/01/09 18:40:22 INFO mapred.JobClient:  map 100% reduce 98%\n15/01/09 18:40:28 INFO mapred.JobClient:  map 100% reduce 100%\n15/01/09 18:40:39 INFO mapred.JobClient: Job complete: job_201501101813_0021\n15/01/09 18:40:40 INFO mapred.JobClient: Counters: 31\n15/01/09 18:40:40 INFO mapred.JobClient:   Job Counters\n15/01/09 18:40:40 INFO mapred.JobClient:     Launched reduce tasks=1\n15/01/09 18:40:40 INFO mapred.JobClient:     SLOTS_MILLIS_MAPS=432306\n15/01/09 18:40:40 INFO mapred.JobClient:     Total time spent by all reduces waiting after reserving slots (ms)=0\n15/01/09 18:40:40 INFO mapred.JobClient:     Total time spent by all maps waiting after reserving slots (ms)=0\n15/01/09 18:40:40 INFO mapred.JobClient:     Rack-local map tasks=2\n15/01/09 18:40:40 INFO mapred.JobClient:     Launched map tasks=18\n15/01/09 18:40:40 INFO mapred.JobClient:     Data-local map tasks=16\n15/01/09 18:40:40 INFO mapred.JobClient:     SLOTS_MILLIS_REDUCES=193553\n15/01/09 18:40:40 INFO mapred.JobClient:   File Input Format Counters\n15/01/09 18:40:40 INFO mapred.JobClient:     Bytes Read=1000057358\n15/01/09 18:40:40 INFO mapred.JobClient:   File Output Format Counters\n15/01/09 18:40:40 INFO mapred.JobClient:     Bytes Written=1000000000\n15/01/09 18:40:40 INFO mapred.JobClient:   FileSystemCounters\n15/01/09 18:40:40 INFO mapred.JobClient:     FILE_BYTES_READ=2382257412\n15/01/09 18:40:40 INFO mapred.JobClient:     HDFS_BYTES_READ=1000059054\n15/01/09 18:40:40 INFO mapred.JobClient:     FILE_BYTES_WRITTEN=3402633323\n15/01/09 18:40:40 INFO mapred.JobClient:     HDFS_BYTES_WRITTEN=1000000000\n15/01/09 18:40:40 INFO mapred.JobClient:   Map-Reduce Framework\n15/01/09 18:40:40 INFO mapred.JobClient:     Map output materialized bytes=1020000096\n15/01/09 18:40:40 INFO mapred.JobClient:     Map input records=10000000\n15/01/09 18:40:40 INFO mapred.JobClient:     Reduce shuffle bytes=1020000096\n15/01/09 18:40:40 INFO mapred.JobClient:     Spilled Records=33355441\n15/01/09 18:40:40 INFO mapred.JobClient:     Map output bytes=1000000000\n15/01/09 18:40:40 INFO mapred.JobClient:     Total committed heap usage (bytes)=2367090688\n15/01/09 18:40:40 INFO mapred.JobClient:     CPU time spent (ms)=124990\n15/01/09 18:40:40 INFO mapred.JobClient:     Map input bytes=1000000000\n15/01/09 18:40:40 INFO mapred.JobClient:     SPLIT_RAW_BYTES=1696\n15/01/09 18:40:40 INFO mapred.JobClient:     Combine input records=0\n15/01/09 18:40:40 INFO mapred.JobClient:     Reduce input records=10000000\n15/01/09 18:40:40 INFO mapred.JobClient:     Reduce input groups=10000000\n15/01/09 18:40:40 INFO mapred.JobClient:     Combine output records=0\n15/01/09 18:40:40 INFO mapred.JobClient:     Physical memory (bytes) snapshot=2481545216\n15/01/09 18:40:40 INFO mapred.JobClient:     Reduce output records=10000000\n15/01/09 18:40:40 INFO mapred.JobClient:     Virtual memory (bytes) snapshot=5898289152\n15/01/09 18:40:40 INFO mapred.JobClient:     Map output records=10000000\n15/01/09 18:40:40 INFO terasort.TeraSort: done\n```\n","source":"_posts/hadoop.md","raw":"title: 基于Hadoop平台的局域网和广域网环境下的处理性能比较  \ndate: 2015-1-11 14:01:01\ncategories: hadoop \ntags: [hadoop,n2n,vpn] \n\n---\n\n## 测试目标\n检验在局域网环境下的hadoop平台与广域网环境下通过VPN组建的hadoop平台在处理性能上的差异。\n实际上检测网络通信情况，通过hadoop的terasort示例工具来做排序的压力测试，通过对比排序所用时间来确定差异。\n\n<!--more-->\n## 测试环境\n\nhadoop-1.0.0\n三台vmware下的ubuntu12.04，一台为Master，两台为Slave。\n\n## 实验步骤\n### 测试局域网环境下的计算性能\na.首先搭建hadoop平台\n\nb.搭建好hadoop平台后，通过master启动hadoop\n\nc.本人hadoop装在/usr/hadoop下，首先先通过teragen工具产生一定的随机数据\n\nd.在/usr/hadoop下运行bin/hadoop jar hadoop-examples-1.0.0.jar\n\nteragen 10000000 input\n(即产生1G的文本数据，每行有100个字节，所以总共有一千万行的随机数据，产生的数据存入到hdfs用户目录的input下)\n(附：有时候输入命令，无反应。\n\n出现如下错误：\n\n　　org.apache.hadoop.dfs.SafeModeException: Cannot delete ..., Name node is in safe mode\n\n　　在分布式文件系统启动的时候，开始的时候会有安全模式，当分布式文件系统处于安全模式的情况下，文件系统中的内容不允许修改也不允许删除，直到安全模式结束。安全模式主要是为了系统启动的时候检查各个DataNode上数据块的有效性，同时根据策略必要的复制或者删除部分数据块。运行期通过命令也可以进入安全模式。在实践过程中，系统启动的时候去修改和删除文件也会有安全模式不允许修改的出错提示，只需要等待一会儿即可。\n\n　　解决方案是：关闭安全模式\n　　\n　　\n```\nhadoop dfsadmin -safemode leave\n```\ne.运行结束后，然后运行bin/hadoop jar hadoop-examples-1.0.0.jar terasort input output\n(这条命令是让hadoop执行文本数据的排序，从input读，最终产生的文件也在hdfs的output文件夹下，会生成一个单一的文件。)\n\nf.同时还可用/bin/hadoop jar hadoop-examples-1.0.0.jar teravalidate output validate 来执行检验排序的正确与否。\n#### 结果\n（1）通过6次重复实验，可根据e运行的结果如下：\n\n第一次：5分3秒\n第二次：4分34秒\n第三次：3分44秒\n第四次：4分20秒\n第五次：4分20秒\n第六次：3分59秒\n\n（2）同时观察到两个Slave节点在map和reduce的过程中，cpu和内存充分被利用，cpu占用率大概在60%-75%之间，内存占用百分之90以上。而当总的运算进度已达到百分之70多的时候，有一个节点的cpu和内存已经空闲，说明他自己的运算工作已经完成，另一个节点在总进度达到100%时cpu和内存变为空闲。另外，在hadoop刚刚开始运算的时候，Master瞬间cpu占用比高，之后运算空闲。这也验证了Hadoop平台的主从架构。\n### 测试广域网环境下的计算性能\n广域网测试延迟巨大，处理速度差异巨大。\n## 结论\n分布式的处理架构，对网络带宽的要求苛刻。一般内网中组建的hadoop平台，网络带宽应该在100M。如果公网能找到这样的环境，应该也是可以的。但是这种环境搭建成本太高，所以hadoop平台在广域网范围下的应用失败。\n（据说，处理1TB的数据，需要在网络中传输3TB的数据。）\n\n## 附录\n\n```\nhadoop@Master:/usr/hadoop$ bin/hadoop jar hadoop-examples-1.0.0.jar teragen 10000000 in4\nWarning: $HADOOP_HOME is deprecated.\n\n\nGenerating 10000000 using 2 maps with step of 5000000\n15/01/09 18:35:30 INFO mapred.JobClient: Running job: job_201501101813_0020\n15/01/09 18:35:31 INFO mapred.JobClient:  map 0% reduce 0%\n15/01/09 18:35:47 INFO mapred.JobClient:  map 17% reduce 0%\n15/01/09 18:35:50 INFO mapred.JobClient:  map 40% reduce 0%\n15/01/09 18:35:53 INFO mapred.JobClient:  map 46% reduce 0%\n15/01/09 18:35:54 INFO mapred.JobClient:  map 56% reduce 0%\n15/01/09 18:35:57 INFO mapred.JobClient:  map 61% reduce 0%\n15/01/09 18:35:59 INFO mapred.JobClient:  map 75% reduce 0%\n15/01/09 18:36:00 INFO mapred.JobClient:  map 84% reduce 0%\n15/01/09 18:36:03 INFO mapred.JobClient:  map 95% reduce 0%\n15/01/09 18:36:12 INFO mapred.JobClient:  map 100% reduce 0%\n15/01/09 18:36:17 INFO mapred.JobClient: Job complete: job_201501101813_0020\n15/01/09 18:36:17 INFO mapred.JobClient: Counters: 19\n15/01/09 18:36:17 INFO mapred.JobClient:   Job Counters\n15/01/09 18:36:17 INFO mapred.JobClient:     SLOTS_MILLIS_MAPS=55752\n15/01/09 18:36:17 INFO mapred.JobClient:     Total time spent by all reduces waiting after reserving slots (ms)=0\n15/01/09 18:36:17 INFO mapred.JobClient:     Total time spent by all maps waiting after reserving slots (ms)=0\n15/01/09 18:36:17 INFO mapred.JobClient:     Launched map tasks=2\n15/01/09 18:36:17 INFO mapred.JobClient:     SLOTS_MILLIS_REDUCES=0\n15/01/09 18:36:17 INFO mapred.JobClient:   File Input Format Counters\n15/01/09 18:36:17 INFO mapred.JobClient:     Bytes Read=0\n15/01/09 18:36:17 INFO mapred.JobClient:   File Output Format Counters\n15/01/09 18:36:17 INFO mapred.JobClient:     Bytes Written=1000000000\n15/01/09 18:36:17 INFO mapred.JobClient:   FileSystemCounters\n15/01/09 18:36:17 INFO mapred.JobClient:     HDFS_BYTES_READ=167\n15/01/09 18:36:17 INFO mapred.JobClient:     FILE_BYTES_WRITTEN=42624\n15/01/09 18:36:17 INFO mapred.JobClient:     HDFS_BYTES_WRITTEN=1000000000\n15/01/09 18:36:17 INFO mapred.JobClient:   Map-Reduce Framework\n15/01/09 18:36:17 INFO mapred.JobClient:     Map input records=10000000\n15/01/09 18:36:17 INFO mapred.JobClient:     Physical memory (bytes) snapshot=77443072\n15/01/09 18:36:17 INFO mapred.JobClient:     Spilled Records=0\n15/01/09 18:36:17 INFO mapred.JobClient:     CPU time spent (ms)=14870\n15/01/09 18:36:17 INFO mapred.JobClient:     Total committed heap usage (bytes)=31850496\n15/01/09 18:36:17 INFO mapred.JobClient:     Virtual memory (bytes) snapshot=694943744\n15/01/09 18:36:17 INFO mapred.JobClient:     Map input bytes=10000000\n15/01/09 18:36:17 INFO mapred.JobClient:     Map output records=10000000\n15/01/09 18:36:17 INFO mapred.JobClient:     SPLIT_RAW_BYTES=167\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\nhadoop@Master:/usr/hadoop$ bin/hadoop jar hadoop-examples-1.0.0.jar terasort in4                                                                              out4\nWarning: $HADOOP_HOME is deprecated.\n\n\n15/01/09 18:36:49 INFO terasort.TeraSort: starting\n15/01/09 18:36:50 INFO mapred.FileInputFormat: Total input paths to process : 2\n15/01/09 18:36:50 INFO util.NativeCodeLoader: Loaded the native-hadoop library\n15/01/09 18:36:50 INFO zlib.ZlibFactory: Successfully loaded & initialized native-zlib library\n15/01/09 18:36:50 INFO compress.CodecPool: Got brand-new compressor\nMaking 1 from 100000 records\nStep size is 100000.0\n15/01/09 18:36:50 INFO mapred.FileInputFormat: Total input paths to process : 2\n15/01/09 18:36:51 INFO mapred.JobClient: Running job: job_201501101813_0021\n15/01/09 18:36:52 INFO mapred.JobClient:  map 0% reduce 0%\n15/01/09 18:37:09 INFO mapred.JobClient:  map 10% reduce 0%\n15/01/09 18:37:11 INFO mapred.JobClient:  map 21% reduce 0%\n15/01/09 18:37:12 INFO mapred.JobClient:  map 22% reduce 0%\n15/01/09 18:37:13 INFO mapred.JobClient:  map 24% reduce 0%\n15/01/09 18:37:17 INFO mapred.JobClient:  map 25% reduce 0%\n15/01/09 18:37:23 INFO mapred.JobClient:  map 30% reduce 0%\n15/01/09 18:37:26 INFO mapred.JobClient:  map 35% reduce 0%\n15/01/09 18:37:28 INFO mapred.JobClient:  map 36% reduce 0%\n15/01/09 18:37:33 INFO mapred.JobClient:  map 37% reduce 2%\n15/01/09 18:37:39 INFO mapred.JobClient:  map 37% reduce 4%\n15/01/09 18:37:42 INFO mapred.JobClient:  map 37% reduce 6%\n15/01/09 18:37:47 INFO mapred.JobClient:  map 37% reduce 8%\n15/01/09 18:37:48 INFO mapred.JobClient:  map 37% reduce 10%\n15/01/09 18:37:49 INFO mapred.JobClient:  map 44% reduce 10%\n15/01/09 18:37:52 INFO mapred.JobClient:  map 47% reduce 10%\n15/01/09 18:37:59 INFO mapred.JobClient:  map 49% reduce 10%\n15/01/09 18:38:01 INFO mapred.JobClient:  map 56% reduce 10%\n15/01/09 18:38:03 INFO mapred.JobClient:  map 60% reduce 10%\n15/01/09 18:38:06 INFO mapred.JobClient:  map 61% reduce 12%\n15/01/09 18:38:10 INFO mapred.JobClient:  map 62% reduce 12%\n15/01/09 18:38:16 INFO mapred.JobClient:  map 66% reduce 14%\n15/01/09 18:38:20 INFO mapred.JobClient:  map 68% reduce 16%\n15/01/09 18:38:21 INFO mapred.JobClient:  map 69% reduce 16%\n15/01/09 18:38:22 INFO mapred.JobClient:  map 69% reduce 18%\n15/01/09 18:38:29 INFO mapred.JobClient:  map 73% reduce 20%\n15/01/09 18:38:32 INFO mapred.JobClient:  map 83% reduce 20%\n15/01/09 18:38:35 INFO mapred.JobClient:  map 87% reduce 20%\n15/01/09 18:38:47 INFO mapred.JobClient:  map 93% reduce 25%\n15/01/09 18:38:51 INFO mapred.JobClient:  map 95% reduce 25%\n15/01/09 18:38:54 INFO mapred.JobClient:  map 98% reduce 25%\n15/01/09 18:38:57 INFO mapred.JobClient:  map 99% reduce 27%\n15/01/09 18:39:00 INFO mapred.JobClient:  map 100% reduce 29%\n15/01/09 18:39:03 INFO mapred.JobClient:  map 100% reduce 31%\n15/01/09 18:39:12 INFO mapred.JobClient:  map 100% reduce 33%\n15/01/09 18:39:30 INFO mapred.JobClient:  map 100% reduce 67%\n15/01/09 18:39:33 INFO mapred.JobClient:  map 100% reduce 69%\n15/01/09 18:39:36 INFO mapred.JobClient:  map 100% reduce 71%\n15/01/09 18:39:39 INFO mapred.JobClient:  map 100% reduce 73%\n15/01/09 18:39:42 INFO mapred.JobClient:  map 100% reduce 75%\n15/01/09 18:39:46 INFO mapred.JobClient:  map 100% reduce 77%\n15/01/09 18:39:49 INFO mapred.JobClient:  map 100% reduce 78%\n15/01/09 18:39:52 INFO mapred.JobClient:  map 100% reduce 79%\n15/01/09 18:39:55 INFO mapred.JobClient:  map 100% reduce 81%\n15/01/09 18:39:58 INFO mapred.JobClient:  map 100% reduce 83%\n15/01/09 18:40:01 INFO mapred.JobClient:  map 100% reduce 85%\n15/01/09 18:40:04 INFO mapred.JobClient:  map 100% reduce 86%\n15/01/09 18:40:07 INFO mapred.JobClient:  map 100% reduce 88%\n15/01/09 18:40:10 INFO mapred.JobClient:  map 100% reduce 90%\n15/01/09 18:40:13 INFO mapred.JobClient:  map 100% reduce 92%\n15/01/09 18:40:16 INFO mapred.JobClient:  map 100% reduce 94%\n15/01/09 18:40:19 INFO mapred.JobClient:  map 100% reduce 96%\n15/01/09 18:40:22 INFO mapred.JobClient:  map 100% reduce 98%\n15/01/09 18:40:28 INFO mapred.JobClient:  map 100% reduce 100%\n15/01/09 18:40:39 INFO mapred.JobClient: Job complete: job_201501101813_0021\n15/01/09 18:40:40 INFO mapred.JobClient: Counters: 31\n15/01/09 18:40:40 INFO mapred.JobClient:   Job Counters\n15/01/09 18:40:40 INFO mapred.JobClient:     Launched reduce tasks=1\n15/01/09 18:40:40 INFO mapred.JobClient:     SLOTS_MILLIS_MAPS=432306\n15/01/09 18:40:40 INFO mapred.JobClient:     Total time spent by all reduces waiting after reserving slots (ms)=0\n15/01/09 18:40:40 INFO mapred.JobClient:     Total time spent by all maps waiting after reserving slots (ms)=0\n15/01/09 18:40:40 INFO mapred.JobClient:     Rack-local map tasks=2\n15/01/09 18:40:40 INFO mapred.JobClient:     Launched map tasks=18\n15/01/09 18:40:40 INFO mapred.JobClient:     Data-local map tasks=16\n15/01/09 18:40:40 INFO mapred.JobClient:     SLOTS_MILLIS_REDUCES=193553\n15/01/09 18:40:40 INFO mapred.JobClient:   File Input Format Counters\n15/01/09 18:40:40 INFO mapred.JobClient:     Bytes Read=1000057358\n15/01/09 18:40:40 INFO mapred.JobClient:   File Output Format Counters\n15/01/09 18:40:40 INFO mapred.JobClient:     Bytes Written=1000000000\n15/01/09 18:40:40 INFO mapred.JobClient:   FileSystemCounters\n15/01/09 18:40:40 INFO mapred.JobClient:     FILE_BYTES_READ=2382257412\n15/01/09 18:40:40 INFO mapred.JobClient:     HDFS_BYTES_READ=1000059054\n15/01/09 18:40:40 INFO mapred.JobClient:     FILE_BYTES_WRITTEN=3402633323\n15/01/09 18:40:40 INFO mapred.JobClient:     HDFS_BYTES_WRITTEN=1000000000\n15/01/09 18:40:40 INFO mapred.JobClient:   Map-Reduce Framework\n15/01/09 18:40:40 INFO mapred.JobClient:     Map output materialized bytes=1020000096\n15/01/09 18:40:40 INFO mapred.JobClient:     Map input records=10000000\n15/01/09 18:40:40 INFO mapred.JobClient:     Reduce shuffle bytes=1020000096\n15/01/09 18:40:40 INFO mapred.JobClient:     Spilled Records=33355441\n15/01/09 18:40:40 INFO mapred.JobClient:     Map output bytes=1000000000\n15/01/09 18:40:40 INFO mapred.JobClient:     Total committed heap usage (bytes)=2367090688\n15/01/09 18:40:40 INFO mapred.JobClient:     CPU time spent (ms)=124990\n15/01/09 18:40:40 INFO mapred.JobClient:     Map input bytes=1000000000\n15/01/09 18:40:40 INFO mapred.JobClient:     SPLIT_RAW_BYTES=1696\n15/01/09 18:40:40 INFO mapred.JobClient:     Combine input records=0\n15/01/09 18:40:40 INFO mapred.JobClient:     Reduce input records=10000000\n15/01/09 18:40:40 INFO mapred.JobClient:     Reduce input groups=10000000\n15/01/09 18:40:40 INFO mapred.JobClient:     Combine output records=0\n15/01/09 18:40:40 INFO mapred.JobClient:     Physical memory (bytes) snapshot=2481545216\n15/01/09 18:40:40 INFO mapred.JobClient:     Reduce output records=10000000\n15/01/09 18:40:40 INFO mapred.JobClient:     Virtual memory (bytes) snapshot=5898289152\n15/01/09 18:40:40 INFO mapred.JobClient:     Map output records=10000000\n15/01/09 18:40:40 INFO terasort.TeraSort: done\n```\n","slug":"hadoop","published":1,"updated":"2015-08-09T06:16:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid44wjya000srud3dxcznrrd"},{"title":"移植busybox到开发板","date":"2015-04-11T18:01:01.000Z","_content":"\n折腾了两天，终于把这个做好，移植的工作还是很辛苦的，目前自己对/etc/下的配置文件的逻辑关系还不是太清晰，这还需要后续的努力，一些心得，更多的是备忘，把这些东西记录下来。\n\n<!--more-->\n## 1.我的需求\n\n由于目前的实验平台没有telnet和ftp，所以在软件调试过程中，只能用串口和SD卡来交互和传送文件。于是就想到自己定制一个文件系统，此文件系统包含这两个功能，另外由于项目的需求为一个演示系统，所以还需要在主板自带的屏幕上输出 程序的打印信息。\n\n## 2.实验环境\n1.PC机位ubuntu 12.04 , 交叉编译工具gcc version 4.4.1 (Sourcery G++ Lite 2009q3-67)\n\n2.嵌入式主板为：DevKit 8000 \n\n3.busybox版本为：1.13.1\n\n4.vsftp 版本为：2.0.5\n### 3.实验过程\n1.首先需要编译busybox，编译的过程网上有很多的教程。telnet就再busybox中编译。\n\nmake install 之后会在 当前目前下的_install/目录下生成所需要的几个目录。\nbin sbin linuxrc usr(这个我并没有编译)\n\n2.把上边的三个文件夹放到一个新建的rootfs/下，剩下的文件我并没有自己去建。 把原来devkit8000的文件系统解压之后，我放到了rootfs下，（需要注意的是，/etc目录下的文件我没有拷贝，因为之前拷贝过很多次，会出 现各种各样的问题，所以/etc下的文件，我用的是天嵌的板子tq335x文件系统中的/etc/）\n\n3.值得注意的是，profile和init.d/rcS中的文件要进行一些调整，以下是调整之后的。\n```\n/etc/profile  \n```\n\n```\n# Ash profile   \n# vim: syntax=sh  \n  \n# No core files by default  \n#ulimit -S -c 0 > /dev/null 2>&1  \n  \nexport set HOME=/root  \nexport set QTDIR=/opt/PDA  \nexport set QPEDIR=/opt/PDA  \nexport set QWS_DISPLAY=\"LinuxFB:/dev/fb0\"  \nexport set QWS_KEYBOARD=\"TTY:/dev/tty1\"  \nif [ -f /sys/devices/virtual/input/mice/subsystem/input$ts/uevent ] ; then  \n        export set TSLIB_CONFFILE=/etc/ts.conf  \n        if [ -n \"$pointer\" ] ; then  \n                export set TSLIB_CALIBFILE=$pointer  \n        fi  \n        export set TSLIB_TSDEVICE=/dev/event$ts  \n        export set TSLIB_PLUGINDIR=/lib/ts  \n        export set QWS_MOUSE_PROTO=\"TSLIB:/dev/event$ts MouseMan:/dev/mice\"  \nfi  \nexport set QT_PLUGIN_PATH=$QTDIR/plugins/  \nexport set QT_QWS_FONTDIR=$QTDIR/lib/fonts/  \nexport set PATH=$QPEDIR/bin:$PATH  \nexport set LD_LIBRARY_PATH=$QTDIR/lib:$QPEDIR/plugins/imageformats:$QPEDIR/plugins/accessible:$LD_LIBRARY_PATH  \n  \n#USER=\"`id -un`\"  \n#LOGNAME=$USER  \n#PS1='[\\u@\\h \\W]# '  \n#PATH=$PATH  \n  \n#HOSTNAME=`/bin/hostname`  \n  \n/bin/hostname FlyingGames  \nPS1=\"[\"\"$(whoami)\"@\"$(hostname): \"'$PWD'\"]# \"  \n  \n  \nexport USER LOGNAME PS1 PATH  \n\n[cpp] view plaincopyprint?\n/etc/init.d/rcS  \n[cpp] view plaincopyprint?\n#!/bin/sh  \n  \n  \nPATH=/sbin:/bin:/usr/sbin:/usr/bin  \nrunlevel=S  \nprevlevel=N  \numask 022  \nexport PATH runlevel prevlevel  \n  \n#  \n#       Trap CTRL-C &c only in this shell so we can interrupt subprocesses.  \n#  \n  \nmount -a  \nmkdir -p /dev/pts  \nmount -t devpts devpts /dev/pts  \nmount -n -t usbfs none /proc/bus/usb  \necho /sbin/mdev > /proc/sys/kernel/hotplug  \nmdev -s  \nmkdir -p /var/lock  \n  \n#modprobe rt5370sta  \n  \nhwclock -s  \n#EmbedSky_wdg &  \n  \n  \nifconfig lo 127.0.0.1  \nnet_set &  \n  \n/etc/rc.d/init.d/netd start  \n/etc/rc.d/init.d/httpd start  \n/etc/rc.d/init.d/leds start  \n  \nInputAdapter  \n#pda &  \n#/bin/hostname -F /etc/sysconfig/HOSTNAME  \n  \n#telnet  stream  tcp     nowait  root    /usr/sbin/telnetd       /usr/sbin/telnetd -i  \n/usr/sbin/telnetd &  \n/usr/sbin/vsftpd &  \n  \n  \ninsmod /usr/lib/rt3070sta.ko  \nsleep 1  \n```\n至此，telnet已经做完。\n\n4.接下来要做的是vsftp的移植，vsftp不同于telnetd，telnetd是在busybox自带的就有了，但是ftpd我在make menuconfig后找了好半天，都找不到有ftpd，无奈，只能用vsftp这个第三方的程序。[参考](http://blog.163.com/sunshine_linting/blog/static/44893323201391010522601/)\n\n5.接下来要做的是把文件系统打包，拷贝到主板上。\n\n```\n/home/embest/work/tools/mkfs.ubifs -r rootfs -m 2048 -e 129024 -c 812 -o ubifs.img\n/home/embest/work/tools/ubinize -o ubi.img -m 2048 -p 128KiB -s 512 /home/embest/work/tools/ubinize.cfg\ncp ubi.img /media/LABEL1\n```\n6.把sd卡插到主板上\n\n\n```\nmmcinit\nfatload mmc 0:1 81000000 ubi.img\nnand unlock\nnand ecc sw\nnand erase 680000\nband write.i 81000000 680000 $(file size)\n//开机即可。\n```\n**附：开机之后在主板的屏幕上是没有任何登陆信息的。这时候需要通过登陆telnet然后启动程序。启动程序的时候记得加个重定向 。**\n\n```\nxxxx > /dev/tty0\n\nWifi-Module-804  /   WifiModule\n```\n","source":"_posts/busybox.md","raw":"title: 移植busybox到开发板   \ndate: 2015-4-11 14:01:01\ncategories: 嵌入式linux \ntags: [文件系统,busybox,移植] \n\n---\n\n折腾了两天，终于把这个做好，移植的工作还是很辛苦的，目前自己对/etc/下的配置文件的逻辑关系还不是太清晰，这还需要后续的努力，一些心得，更多的是备忘，把这些东西记录下来。\n\n<!--more-->\n## 1.我的需求\n\n由于目前的实验平台没有telnet和ftp，所以在软件调试过程中，只能用串口和SD卡来交互和传送文件。于是就想到自己定制一个文件系统，此文件系统包含这两个功能，另外由于项目的需求为一个演示系统，所以还需要在主板自带的屏幕上输出 程序的打印信息。\n\n## 2.实验环境\n1.PC机位ubuntu 12.04 , 交叉编译工具gcc version 4.4.1 (Sourcery G++ Lite 2009q3-67)\n\n2.嵌入式主板为：DevKit 8000 \n\n3.busybox版本为：1.13.1\n\n4.vsftp 版本为：2.0.5\n### 3.实验过程\n1.首先需要编译busybox，编译的过程网上有很多的教程。telnet就再busybox中编译。\n\nmake install 之后会在 当前目前下的_install/目录下生成所需要的几个目录。\nbin sbin linuxrc usr(这个我并没有编译)\n\n2.把上边的三个文件夹放到一个新建的rootfs/下，剩下的文件我并没有自己去建。 把原来devkit8000的文件系统解压之后，我放到了rootfs下，（需要注意的是，/etc目录下的文件我没有拷贝，因为之前拷贝过很多次，会出 现各种各样的问题，所以/etc下的文件，我用的是天嵌的板子tq335x文件系统中的/etc/）\n\n3.值得注意的是，profile和init.d/rcS中的文件要进行一些调整，以下是调整之后的。\n```\n/etc/profile  \n```\n\n```\n# Ash profile   \n# vim: syntax=sh  \n  \n# No core files by default  \n#ulimit -S -c 0 > /dev/null 2>&1  \n  \nexport set HOME=/root  \nexport set QTDIR=/opt/PDA  \nexport set QPEDIR=/opt/PDA  \nexport set QWS_DISPLAY=\"LinuxFB:/dev/fb0\"  \nexport set QWS_KEYBOARD=\"TTY:/dev/tty1\"  \nif [ -f /sys/devices/virtual/input/mice/subsystem/input$ts/uevent ] ; then  \n        export set TSLIB_CONFFILE=/etc/ts.conf  \n        if [ -n \"$pointer\" ] ; then  \n                export set TSLIB_CALIBFILE=$pointer  \n        fi  \n        export set TSLIB_TSDEVICE=/dev/event$ts  \n        export set TSLIB_PLUGINDIR=/lib/ts  \n        export set QWS_MOUSE_PROTO=\"TSLIB:/dev/event$ts MouseMan:/dev/mice\"  \nfi  \nexport set QT_PLUGIN_PATH=$QTDIR/plugins/  \nexport set QT_QWS_FONTDIR=$QTDIR/lib/fonts/  \nexport set PATH=$QPEDIR/bin:$PATH  \nexport set LD_LIBRARY_PATH=$QTDIR/lib:$QPEDIR/plugins/imageformats:$QPEDIR/plugins/accessible:$LD_LIBRARY_PATH  \n  \n#USER=\"`id -un`\"  \n#LOGNAME=$USER  \n#PS1='[\\u@\\h \\W]# '  \n#PATH=$PATH  \n  \n#HOSTNAME=`/bin/hostname`  \n  \n/bin/hostname FlyingGames  \nPS1=\"[\"\"$(whoami)\"@\"$(hostname): \"'$PWD'\"]# \"  \n  \n  \nexport USER LOGNAME PS1 PATH  \n\n[cpp] view plaincopyprint?\n/etc/init.d/rcS  \n[cpp] view plaincopyprint?\n#!/bin/sh  \n  \n  \nPATH=/sbin:/bin:/usr/sbin:/usr/bin  \nrunlevel=S  \nprevlevel=N  \numask 022  \nexport PATH runlevel prevlevel  \n  \n#  \n#       Trap CTRL-C &c only in this shell so we can interrupt subprocesses.  \n#  \n  \nmount -a  \nmkdir -p /dev/pts  \nmount -t devpts devpts /dev/pts  \nmount -n -t usbfs none /proc/bus/usb  \necho /sbin/mdev > /proc/sys/kernel/hotplug  \nmdev -s  \nmkdir -p /var/lock  \n  \n#modprobe rt5370sta  \n  \nhwclock -s  \n#EmbedSky_wdg &  \n  \n  \nifconfig lo 127.0.0.1  \nnet_set &  \n  \n/etc/rc.d/init.d/netd start  \n/etc/rc.d/init.d/httpd start  \n/etc/rc.d/init.d/leds start  \n  \nInputAdapter  \n#pda &  \n#/bin/hostname -F /etc/sysconfig/HOSTNAME  \n  \n#telnet  stream  tcp     nowait  root    /usr/sbin/telnetd       /usr/sbin/telnetd -i  \n/usr/sbin/telnetd &  \n/usr/sbin/vsftpd &  \n  \n  \ninsmod /usr/lib/rt3070sta.ko  \nsleep 1  \n```\n至此，telnet已经做完。\n\n4.接下来要做的是vsftp的移植，vsftp不同于telnetd，telnetd是在busybox自带的就有了，但是ftpd我在make menuconfig后找了好半天，都找不到有ftpd，无奈，只能用vsftp这个第三方的程序。[参考](http://blog.163.com/sunshine_linting/blog/static/44893323201391010522601/)\n\n5.接下来要做的是把文件系统打包，拷贝到主板上。\n\n```\n/home/embest/work/tools/mkfs.ubifs -r rootfs -m 2048 -e 129024 -c 812 -o ubifs.img\n/home/embest/work/tools/ubinize -o ubi.img -m 2048 -p 128KiB -s 512 /home/embest/work/tools/ubinize.cfg\ncp ubi.img /media/LABEL1\n```\n6.把sd卡插到主板上\n\n\n```\nmmcinit\nfatload mmc 0:1 81000000 ubi.img\nnand unlock\nnand ecc sw\nnand erase 680000\nband write.i 81000000 680000 $(file size)\n//开机即可。\n```\n**附：开机之后在主板的屏幕上是没有任何登陆信息的。这时候需要通过登陆telnet然后启动程序。启动程序的时候记得加个重定向 。**\n\n```\nxxxx > /dev/tty0\n\nWifi-Module-804  /   WifiModule\n```\n","slug":"busybox","published":1,"updated":"2015-08-09T06:28:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid44wjyr0011rud35gmkbbg8"},{"title":"良心DNS","date":"2015-07-16T00:10:29.000Z","description":"提供可替换的DNS","_content":"## 比较好用的dns\n### 国内DNS\n<!--more-->\n```\n1.aliDNS：223.5.5.5；223.6.6.6\n\n2.114DNS：114.114.114.114；114.114.115.115\n\n3.oneDNS：112.124.47.27\n```\n### 国外DNS\n```\n1.V2EX DNS：199.91.73.222；178.79.131.110\n\n2.Google DNS：8.8.8.8；8.8.4.4\n\n3.OpenDNS：208.67.222.222；208.67.220.220\n```","source":"_posts/Liangxindns.md","raw":"title: 良心DNS \ndate: 2015-7-15 20:10:29\ncategories: 网络技术 \ntags: [DNS，第三方DNS] \ndescription: 提供可替换的DNS\n---\n## 比较好用的dns\n### 国内DNS\n<!--more-->\n```\n1.aliDNS：223.5.5.5；223.6.6.6\n\n2.114DNS：114.114.114.114；114.114.115.115\n\n3.oneDNS：112.124.47.27\n```\n### 国外DNS\n```\n1.V2EX DNS：199.91.73.222；178.79.131.110\n\n2.Google DNS：8.8.8.8；8.8.4.4\n\n3.OpenDNS：208.67.222.222；208.67.220.220\n```","slug":"Liangxindns","published":1,"updated":"2015-08-09T06:53:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid44wjzd001arud3d5vb36he"}],"PostAsset":[],"PostCategory":[{"post_id":"cid44wjwt0003rud3kx8j628f","category_id":"cid44wjx30004rud3htxrmmd4","_id":"cid44wjx90007rud3717dtj39"},{"post_id":"cid44wjxj000crud3br82l1rf","category_id":"cid44wjxl000drud3q66m6h4i","_id":"cid44wjxm000grud3mz6vikal"},{"post_id":"cid44wjxt000jrud3sj3lvlnm","category_id":"cid44wjxv000krud3futlyshz","_id":"cid44wjy2000nrud3vndz37t1"},{"post_id":"cid44wjya000srud3dxcznrrd","category_id":"cid44wjyb000trud3bdhp1v0y","_id":"cid44wjyi000wrud3nz4z7vec"},{"post_id":"cid44wjyr0011rud35gmkbbg8","category_id":"cid44wjyy0012rud3wu6uhwhi","_id":"cid44wjz00015rud3fbei8qqc"},{"post_id":"cid44wjzd001arud3d5vb36he","category_id":"cid44wjx30004rud3htxrmmd4","_id":"cid44wjzk001brud35606d2ex"}],"PostTag":[{"post_id":"cid44wjwt0003rud3kx8j628f","tag_id":"cid44wjx30005rud3p4wc9dpf","_id":"cid44wjxg0009rud3rsbdyo2j"},{"post_id":"cid44wjwt0003rud3kx8j628f","tag_id":"cid44wjx90006rud301ruvyuv","_id":"cid44wjxg000arud38wz9fuk4"},{"post_id":"cid44wjwt0003rud3kx8j628f","tag_id":"cid44wjxg0008rud3rcatdmd3","_id":"cid44wjxh000brud3yg5prjk3"},{"post_id":"cid44wjxj000crud3br82l1rf","tag_id":"cid44wjxl000erud3wpkidmko","_id":"cid44wjxm000hrud3hfxbhbx5"},{"post_id":"cid44wjxj000crud3br82l1rf","tag_id":"cid44wjxm000frud3ar4rtywh","_id":"cid44wjxm000irud30e2uimlw"},{"post_id":"cid44wjxt000jrud3sj3lvlnm","tag_id":"cid44wjxv000lrud3w2b2mq4a","_id":"cid44wjy2000prud3v72sljsj"},{"post_id":"cid44wjxt000jrud3sj3lvlnm","tag_id":"cid44wjy0000mrud3mdcqcxiu","_id":"cid44wjy3000qrud3te01cq9d"},{"post_id":"cid44wjxt000jrud3sj3lvlnm","tag_id":"cid44wjy2000orud3ot2bsi9z","_id":"cid44wjy4000rrud3vtmt9kje"},{"post_id":"cid44wjya000srud3dxcznrrd","tag_id":"cid44wjyb000urud346cksoqf","_id":"cid44wjyj000yrud31sw7w73z"},{"post_id":"cid44wjya000srud3dxcznrrd","tag_id":"cid44wjyh000vrud3atb5mb81","_id":"cid44wjyo000zrud31avhami7"},{"post_id":"cid44wjya000srud3dxcznrrd","tag_id":"cid44wjyj000xrud3lbe0rgr2","_id":"cid44wjyp0010rud3rrb0auva"},{"post_id":"cid44wjyr0011rud35gmkbbg8","tag_id":"cid44wjyy0013rud36cwvleg2","_id":"cid44wjz50017rud386489utw"},{"post_id":"cid44wjyr0011rud35gmkbbg8","tag_id":"cid44wjyz0014rud3tv2cf42b","_id":"cid44wjz50018rud3ruvqcehm"},{"post_id":"cid44wjyr0011rud35gmkbbg8","tag_id":"cid44wjz00016rud31j8zc1xv","_id":"cid44wjz50019rud3cejezp50"},{"post_id":"cid44wjzd001arud3d5vb36he","tag_id":"cid44wjzk001crud3689t4kxi","_id":"cid44wjzl001drud3o7hd9967"}],"Tag":[{"name":"ssh反向代理","_id":"cid44wjx30005rud3p4wc9dpf"},{"name":"ssh","_id":"cid44wjx90006rud301ruvyuv"},{"name":"穿越内网","_id":"cid44wjxg0008rud3rcatdmd3"},{"name":"excel","_id":"cid44wjxl000erud3wpkidmko"},{"name":"phpmyadmin","_id":"cid44wjxm000frud3ar4rtywh"},{"name":"linux","_id":"cid44wjxv000lrud3w2b2mq4a"},{"name":"内存管理","_id":"cid44wjy0000mrud3mdcqcxiu"},{"name":"分页技术","_id":"cid44wjy2000orud3ot2bsi9z"},{"name":"hadoop","_id":"cid44wjyb000urud346cksoqf"},{"name":"n2n","_id":"cid44wjyh000vrud3atb5mb81"},{"name":"vpn","_id":"cid44wjyj000xrud3lbe0rgr2"},{"name":"文件系统","_id":"cid44wjyy0013rud36cwvleg2"},{"name":"busybox","_id":"cid44wjyz0014rud3tv2cf42b"},{"name":"移植","_id":"cid44wjz00016rud31j8zc1xv"},{"name":"DNS，第三方DNS","_id":"cid44wjzk001crud3689t4kxi"}]}}